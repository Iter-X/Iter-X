syntax = "proto3";

package user.v1;

import "google/api/annotations.proto";
import "validatex/validatex.proto";

option go_package = "github.com/iter-x/iter-x/internal/api/user/v1;v1";

service UserService {
  rpc GetUserInfo (GetUserInfoRequest) returns (GetUserInfoResponse) {
    option (google.api.http) = {
      get: "/api/v1/user/info"
    };
  }

  rpc UpdateUserInfo (UpdateUserInfoRequest) returns (UpdateUserInfoResponse) {
    option (google.api.http) = {
      put: "/api/v1/user/info"
      body: "*"
    };
  }

  rpc GetUserPreferences (GetUserPreferencesRequest) returns (GetUserPreferencesResponse) {
    option (google.api.http) = {
      get: "/api/v1/user/preferences"
    };
  }

  rpc UpdateUserPreferences (UpdateUserPreferencesRequest) returns (UpdateUserPreferencesResponse) {
    option (google.api.http) = {
      put: "/api/v1/user/preferences"
      body: "*"
    };
  }

  rpc GetSupportedLanguages (GetSupportedLanguagesRequest) returns (GetSupportedLanguagesResponse) {
    option (google.api.http) = {
      get: "/api/v1/user/supported-languages"
    };
  }
}

message GetUserInfoRequest {}

message GetUserInfoResponse {
  string id = 1;
  string username = 2;
  string nickname = 3;
  string email = 4;
  string phone_number = 5;
  string avatar_url = 6;
  int64 created_at = 7;
  int64 updated_at = 8;
}

message UpdateUserInfoRequest {
  string username = 1 [(validatex.rules).string = {
    max_len: 50
  }];
  string nickname = 2 [(validatex.rules).string = {
    max_len: 50
  }];
  string avatar_url = 3 [(validatex.rules).string = {
    max_len: 255
  }];
}

message UpdateUserInfoResponse {}

enum TimeFormat {
  H24 = 0;
  H12 = 1;
}

enum DistanceUnit {
  Kilometer = 0;
  Mile = 1;
}

enum DarkMode {
  System = 0;
  Off = 1;
  On = 2;
}

message UserPreference {
  string app_language = 1 [(validatex.rules).string = {
    max_len: 10
  }];
  string default_city = 2 [(validatex.rules).string = {
    max_len: 50
  }];
  TimeFormat time_format = 3;
  DistanceUnit distance_unit = 4;
  DarkMode dark_mode = 5;
  bool trip_reminder = 6;
  bool community_notification = 7;
  bool content_push = 8;
}

message GetUserPreferencesRequest {}

message GetUserPreferencesResponse {
  UserPreference preference = 1;
}

message UpdateUserPreferencesRequest {
  UserPreference preference = 1;
}

message UpdateUserPreferencesResponse {}

message GetSupportedLanguagesRequest {}

message Language {
  string code = 1;
  string name = 2;
  string native_name = 3;
}

message GetSupportedLanguagesResponse {
  repeated Language languages = 1;
}