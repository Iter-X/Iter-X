syntax = "proto3";

package trip.v1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "validatex/validatex.proto";

option go_package = "github.com/iter-x/iter-x/internal/api/trip/v1;v1";

service TripService {
  rpc CreateTrip(CreateTripRequest) returns (CreateTripResponse) {
    option (google.api.http) = {
      post: "/api/v1/trips"
      body: "*"
    };
  }
  rpc GetTrip(GetTripRequest) returns (GetTripResponse) {
    option (google.api.http) = {
      get: "/api/v1/trips/{id}"
    };
  }
  rpc UpdateTrip(UpdateTripRequest) returns (UpdateTripResponse) {
    option (google.api.http) = {
      put: "/api/v1/trips/{id}"
      body: "*"
    };
  }
  rpc DeleteTrip(DeleteTripRequest) returns (DeleteTripResponse) {
    option (google.api.http) = {
      delete: "/api/v1/trips/{id}"
    };
  }
  rpc ListTrips(ListTripsRequest) returns (ListTripsResponse) {
    option (google.api.http) = {
      get: "/api/v1/trips"
    };
  }

  rpc CreateDailyTrip(CreateDailyTripRequest) returns (CreateDailyTripResponse) {
    option (google.api.http) = {
      post: "/api/v1/trips/{trip_id}/daily"
      body: "*"
    };
  }
  rpc GetDailyTrip(GetDailyTripRequest) returns (GetDailyTripResponse) {
    option (google.api.http) = {
      get: "/api/v1/trips/{trip_id}/daily/{daily_id}"
    };
  }
  rpc UpdateDailyTrip(UpdateDailyTripRequest) returns (UpdateDailyTripResponse) {
    option (google.api.http) = {
      put: "/api/v1/trips/{trip_id}/daily/{daily_id}"
      body: "*"
    };
  }
  rpc DeleteDailyTrip(DeleteDailyTripRequest) returns (DeleteDailyTripResponse) {
    option (google.api.http) = {
      delete: "/api/v1/trips/{trip_id}/daily/{daily_id}"
    };
  }
  rpc ListDailyTrips(ListDailyTripsRequest) returns (ListDailyTripsResponse) {
    option (google.api.http) = {
      get: "/api/v1/trips/{trip_id}/daily"
    };
  }
}

message Trip {
  string id = 1;
  google.protobuf.Timestamp created_at = 2;
  google.protobuf.Timestamp updated_at = 3;
  bool status = 4;
  string title = 5;
  string description = 6;
  google.protobuf.Timestamp start_ts = 7;
  google.protobuf.Timestamp end_ts = 8;
}


// Define the enum type for trip creation methods
enum TripCreationMethod {
  TRIP_CREATION_METHOD_UNSPECIFIED = 0;
  MANUAL = 1; // Manual creation
  CARD = 2; // Card-based creation
  EXTERNAL_LINK = 3; // External link creation
  IMAGE = 4; // Image-based creation
  VOICE = 5; // Voice-based creation
}

message CreateTripRequest {
  TripCreationMethod creation_method = 1;
  string destination = 2;
  google.protobuf.Timestamp start_ts = 3;
  google.protobuf.Timestamp end_ts = 4;
  int32 duration = 5;
}

message CreateTripResponse {
  Trip trip = 1;
}

message GetTripRequest {
  string id = 1 [(validatex.rules).string.uuid = true];
}

message GetTripResponse {
  Trip trip = 1;
}

message UpdateTripRequest {
  string id = 1 [(validatex.rules).string.uuid = true];
  string title = 2;
  string description = 3;
  google.protobuf.Timestamp start_ts = 4;
  google.protobuf.Timestamp end_ts = 5;
  bool status = 7;
}

message UpdateTripResponse {
  Trip trip = 1;
}

message DeleteTripRequest {
  string id = 1 [(validatex.rules).string.uuid = true];
}

message DeleteTripResponse {
  string status = 1;
}

message ListTripsRequest {
}

message ListTripsResponse {
  repeated Trip trips = 1;
}

message CreateDailyTripRequest {
  string trip_id = 1 [(validatex.rules).string.uuid = true];
  int32 day = 2;
  google.protobuf.Timestamp date = 3;
  string notes = 4;
}

message CreateDailyTripResponse {
  DailyTrip daily_trip = 1;
}

message GetDailyTripRequest {
  string trip_id = 1 [(validatex.rules).string.uuid = true];
  string daily_id = 2 [(validatex.rules).string.uuid = true];
}

message GetDailyTripResponse {
  DailyTrip daily_trip = 1;
}

message UpdateDailyTripRequest {
  string trip_id = 1 [(validatex.rules).string.uuid = true];
  string daily_id = 2 [(validatex.rules).string.uuid = true];
  int32 day = 3;
  google.protobuf.Timestamp date = 4;
  string notes = 5;
}

message UpdateDailyTripResponse {
  DailyTrip daily_trip = 1;
}

message DeleteDailyTripRequest {
  string trip_id = 1 [(validatex.rules).string.uuid = true];
  string daily_id = 2 [(validatex.rules).string.uuid = true];
}

message DeleteDailyTripResponse {
  string status = 1;
}

message ListDailyTripsRequest {
  string trip_id = 1 [(validatex.rules).string.uuid = true];
}

message ListDailyTripsResponse {
  repeated DailyTrip daily_trips = 1;
}

message DailyTrip {
  string id = 1;
  google.protobuf.Timestamp created_at = 2;
  google.protobuf.Timestamp updated_at = 3;
  string trip_id = 4;
  int32 day = 5;
  google.protobuf.Timestamp date = 6;
  string notes = 7;
}
