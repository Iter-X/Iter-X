// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v5.28.3
// source: proto/conf/conf.proto

package conf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Environment int32

const (
	Environment_UNKNOWN Environment = 0
	Environment_DEV     Environment = 1
	Environment_PROD    Environment = 2
	Environment_TEST    Environment = 3
)

// Enum value maps for Environment.
var (
	Environment_name = map[int32]string{
		0: "UNKNOWN",
		1: "DEV",
		2: "PROD",
		3: "TEST",
	}
	Environment_value = map[string]int32{
		"UNKNOWN": 0,
		"DEV":     1,
		"PROD":    2,
		"TEST":    3,
	}
)

func (x Environment) Enum() *Environment {
	p := new(Environment)
	*p = x
	return p
}

func (x Environment) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Environment) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_conf_conf_proto_enumTypes[0].Descriptor()
}

func (Environment) Type() protoreflect.EnumType {
	return &file_proto_conf_conf_proto_enumTypes[0]
}

func (x Environment) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Environment.Descriptor instead.
func (Environment) EnumDescriptor() ([]byte, []int) {
	return file_proto_conf_conf_proto_rawDescGZIP(), []int{0}
}

type I18NFormat int32

const (
	I18NFormat_TOML I18NFormat = 0
	I18NFormat_JSON I18NFormat = 1
)

// Enum value maps for I18NFormat.
var (
	I18NFormat_name = map[int32]string{
		0: "TOML",
		1: "JSON",
	}
	I18NFormat_value = map[string]int32{
		"TOML": 0,
		"JSON": 1,
	}
)

func (x I18NFormat) Enum() *I18NFormat {
	p := new(I18NFormat)
	*p = x
	return p
}

func (x I18NFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (I18NFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_conf_conf_proto_enumTypes[1].Descriptor()
}

func (I18NFormat) Type() protoreflect.EnumType {
	return &file_proto_conf_conf_proto_enumTypes[1]
}

func (x I18NFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use I18NFormat.Descriptor instead.
func (I18NFormat) EnumDescriptor() ([]byte, []int) {
	return file_proto_conf_conf_proto_rawDescGZIP(), []int{1}
}

type Data_Cache_CacheDriver int32

const (
	Data_Cache_REDIS  Data_Cache_CacheDriver = 0
	Data_Cache_MEMORY Data_Cache_CacheDriver = 1
)

// Enum value maps for Data_Cache_CacheDriver.
var (
	Data_Cache_CacheDriver_name = map[int32]string{
		0: "REDIS",
		1: "MEMORY",
	}
	Data_Cache_CacheDriver_value = map[string]int32{
		"REDIS":  0,
		"MEMORY": 1,
	}
)

func (x Data_Cache_CacheDriver) Enum() *Data_Cache_CacheDriver {
	p := new(Data_Cache_CacheDriver)
	*p = x
	return p
}

func (x Data_Cache_CacheDriver) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Data_Cache_CacheDriver) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_conf_conf_proto_enumTypes[2].Descriptor()
}

func (Data_Cache_CacheDriver) Type() protoreflect.EnumType {
	return &file_proto_conf_conf_proto_enumTypes[2]
}

func (x Data_Cache_CacheDriver) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Data_Cache_CacheDriver.Descriptor instead.
func (Data_Cache_CacheDriver) EnumDescriptor() ([]byte, []int) {
	return file_proto_conf_conf_proto_rawDescGZIP(), []int{4, 1, 0}
}

type Agent_AgentName int32

const (
	Agent_PlanAgent Agent_AgentName = 0
)

// Enum value maps for Agent_AgentName.
var (
	Agent_AgentName_name = map[int32]string{
		0: "PlanAgent",
	}
	Agent_AgentName_value = map[string]int32{
		"PlanAgent": 0,
	}
)

func (x Agent_AgentName) Enum() *Agent_AgentName {
	p := new(Agent_AgentName)
	*p = x
	return p
}

func (x Agent_AgentName) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Agent_AgentName) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_conf_conf_proto_enumTypes[3].Descriptor()
}

func (Agent_AgentName) Type() protoreflect.EnumType {
	return &file_proto_conf_conf_proto_enumTypes[3]
}

func (x Agent_AgentName) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Agent_AgentName.Descriptor instead.
func (Agent_AgentName) EnumDescriptor() ([]byte, []int) {
	return file_proto_conf_conf_proto_rawDescGZIP(), []int{8, 0}
}

type Agent_ToolName int32

const (
	Agent_Completion         Agent_ToolName = 0
	Agent_Browser            Agent_ToolName = 1
	Agent_InducingCreateTrip Agent_ToolName = 2
)

// Enum value maps for Agent_ToolName.
var (
	Agent_ToolName_name = map[int32]string{
		0: "Completion",
		1: "Browser",
		2: "InducingCreateTrip",
	}
	Agent_ToolName_value = map[string]int32{
		"Completion":         0,
		"Browser":            1,
		"InducingCreateTrip": 2,
	}
)

func (x Agent_ToolName) Enum() *Agent_ToolName {
	p := new(Agent_ToolName)
	*p = x
	return p
}

func (x Agent_ToolName) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Agent_ToolName) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_conf_conf_proto_enumTypes[4].Descriptor()
}

func (Agent_ToolName) Type() protoreflect.EnumType {
	return &file_proto_conf_conf_proto_enumTypes[4]
}

func (x Agent_ToolName) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Agent_ToolName.Descriptor instead.
func (Agent_ToolName) EnumDescriptor() ([]byte, []int) {
	return file_proto_conf_conf_proto_rawDescGZIP(), []int{8, 1}
}

type Agent_AgentToolConfig_ToolType int32

const (
	Agent_AgentToolConfig_CodeUse Agent_AgentToolConfig_ToolType = 0
	Agent_AgentToolConfig_LLMUse  Agent_AgentToolConfig_ToolType = 1
)

// Enum value maps for Agent_AgentToolConfig_ToolType.
var (
	Agent_AgentToolConfig_ToolType_name = map[int32]string{
		0: "CodeUse",
		1: "LLMUse",
	}
	Agent_AgentToolConfig_ToolType_value = map[string]int32{
		"CodeUse": 0,
		"LLMUse":  1,
	}
)

func (x Agent_AgentToolConfig_ToolType) Enum() *Agent_AgentToolConfig_ToolType {
	p := new(Agent_AgentToolConfig_ToolType)
	*p = x
	return p
}

func (x Agent_AgentToolConfig_ToolType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Agent_AgentToolConfig_ToolType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_conf_conf_proto_enumTypes[5].Descriptor()
}

func (Agent_AgentToolConfig_ToolType) Type() protoreflect.EnumType {
	return &file_proto_conf_conf_proto_enumTypes[5]
}

func (x Agent_AgentToolConfig_ToolType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Agent_AgentToolConfig_ToolType.Descriptor instead.
func (Agent_AgentToolConfig_ToolType) EnumDescriptor() ([]byte, []int) {
	return file_proto_conf_conf_proto_rawDescGZIP(), []int{8, 0, 0}
}

type Storage_StorageDriver int32

const (
	Storage_LOCAL  Storage_StorageDriver = 0
	Storage_ALIYUN Storage_StorageDriver = 1
)

// Enum value maps for Storage_StorageDriver.
var (
	Storage_StorageDriver_name = map[int32]string{
		0: "LOCAL",
		1: "ALIYUN",
	}
	Storage_StorageDriver_value = map[string]int32{
		"LOCAL":  0,
		"ALIYUN": 1,
	}
)

func (x Storage_StorageDriver) Enum() *Storage_StorageDriver {
	p := new(Storage_StorageDriver)
	*p = x
	return p
}

func (x Storage_StorageDriver) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Storage_StorageDriver) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_conf_conf_proto_enumTypes[6].Descriptor()
}

func (Storage_StorageDriver) Type() protoreflect.EnumType {
	return &file_proto_conf_conf_proto_enumTypes[6]
}

func (x Storage_StorageDriver) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Storage_StorageDriver.Descriptor instead.
func (Storage_StorageDriver) EnumDescriptor() ([]byte, []int) {
	return file_proto_conf_conf_proto_rawDescGZIP(), []int{9, 0}
}

type Bootstrap struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Environment   Environment            `protobuf:"varint,1,opt,name=environment,proto3,enum=conf.Environment" json:"environment,omitempty"`
	Log           *Log                   `protobuf:"bytes,2,opt,name=log,proto3" json:"log,omitempty"`
	Server        *Server                `protobuf:"bytes,3,opt,name=server,proto3" json:"server,omitempty"`
	Data          *Data                  `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Auth          *Auth                  `protobuf:"bytes,5,opt,name=auth,proto3" json:"auth,omitempty"`
	I18N          *I18N                  `protobuf:"bytes,6,opt,name=i18n,proto3" json:"i18n,omitempty"`
	Agent         *Agent                 `protobuf:"bytes,7,opt,name=agent,proto3" json:"agent,omitempty"`
	Storage       *Storage               `protobuf:"bytes,8,opt,name=storage,proto3" json:"storage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Bootstrap) Reset() {
	*x = Bootstrap{}
	mi := &file_proto_conf_conf_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Bootstrap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bootstrap) ProtoMessage() {}

func (x *Bootstrap) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conf_conf_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bootstrap.ProtoReflect.Descriptor instead.
func (*Bootstrap) Descriptor() ([]byte, []int) {
	return file_proto_conf_conf_proto_rawDescGZIP(), []int{0}
}

func (x *Bootstrap) GetEnvironment() Environment {
	if x != nil {
		return x.Environment
	}
	return Environment_UNKNOWN
}

func (x *Bootstrap) GetLog() *Log {
	if x != nil {
		return x.Log
	}
	return nil
}

func (x *Bootstrap) GetServer() *Server {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *Bootstrap) GetData() *Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Bootstrap) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *Bootstrap) GetI18N() *I18N {
	if x != nil {
		return x.I18N
	}
	return nil
}

func (x *Bootstrap) GetAgent() *Agent {
	if x != nil {
		return x.Agent
	}
	return nil
}

func (x *Bootstrap) GetStorage() *Storage {
	if x != nil {
		return x.Storage
	}
	return nil
}

type Log struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Level             string                 `protobuf:"bytes,1,opt,name=level,proto3" json:"level,omitempty"`
	Format            string                 `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"`
	Output            string                 `protobuf:"bytes,3,opt,name=output,proto3" json:"output,omitempty"`
	DisableCaller     bool                   `protobuf:"varint,4,opt,name=disable_caller,json=disableCaller,proto3" json:"disable_caller,omitempty"`
	DisableStacktrace bool                   `protobuf:"varint,5,opt,name=disable_stacktrace,json=disableStacktrace,proto3" json:"disable_stacktrace,omitempty"`
	EnableColor       bool                   `protobuf:"varint,6,opt,name=enable_color,json=enableColor,proto3" json:"enable_color,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Log) Reset() {
	*x = Log{}
	mi := &file_proto_conf_conf_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log) ProtoMessage() {}

func (x *Log) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conf_conf_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log.ProtoReflect.Descriptor instead.
func (*Log) Descriptor() ([]byte, []int) {
	return file_proto_conf_conf_proto_rawDescGZIP(), []int{1}
}

func (x *Log) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *Log) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *Log) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *Log) GetDisableCaller() bool {
	if x != nil {
		return x.DisableCaller
	}
	return false
}

func (x *Log) GetDisableStacktrace() bool {
	if x != nil {
		return x.DisableStacktrace
	}
	return false
}

func (x *Log) GetEnableColor() bool {
	if x != nil {
		return x.EnableColor
	}
	return false
}

type Server struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Http          *Server_HTTP           `protobuf:"bytes,1,opt,name=http,proto3" json:"http,omitempty"`
	Grpc          *Server_GRPC           `protobuf:"bytes,2,opt,name=grpc,proto3" json:"grpc,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Server) Reset() {
	*x = Server{}
	mi := &file_proto_conf_conf_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conf_conf_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_proto_conf_conf_proto_rawDescGZIP(), []int{2}
}

func (x *Server) GetHttp() *Server_HTTP {
	if x != nil {
		return x.Http
	}
	return nil
}

func (x *Server) GetGrpc() *Server_GRPC {
	if x != nil {
		return x.Grpc
	}
	return nil
}

// redis配置
type Redis struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 网络类型
	Network string `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	// 地址
	Addr string `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	// 读写超时
	ReadTimeout  *durationpb.Duration `protobuf:"bytes,3,opt,name=read_timeout,json=readTimeout,proto3" json:"read_timeout,omitempty"`
	WriteTimeout *durationpb.Duration `protobuf:"bytes,4,opt,name=write_timeout,json=writeTimeout,proto3" json:"write_timeout,omitempty"`
	// 密码
	Password string `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	// 数据库
	Db uint32 `protobuf:"varint,6,opt,name=db,proto3" json:"db,omitempty"`
	// 连接超时
	DialTimeout   *durationpb.Duration `protobuf:"bytes,7,opt,name=dial_timeout,json=dialTimeout,proto3" json:"dial_timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Redis) Reset() {
	*x = Redis{}
	mi := &file_proto_conf_conf_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Redis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Redis) ProtoMessage() {}

func (x *Redis) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conf_conf_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Redis.ProtoReflect.Descriptor instead.
func (*Redis) Descriptor() ([]byte, []int) {
	return file_proto_conf_conf_proto_rawDescGZIP(), []int{3}
}

func (x *Redis) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Redis) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Redis) GetReadTimeout() *durationpb.Duration {
	if x != nil {
		return x.ReadTimeout
	}
	return nil
}

func (x *Redis) GetWriteTimeout() *durationpb.Duration {
	if x != nil {
		return x.WriteTimeout
	}
	return nil
}

func (x *Redis) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Redis) GetDb() uint32 {
	if x != nil {
		return x.Db
	}
	return 0
}

func (x *Redis) GetDialTimeout() *durationpb.Duration {
	if x != nil {
		return x.DialTimeout
	}
	return nil
}

type Data struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Database      *Data_Database         `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Cache         *Data_Cache            `protobuf:"bytes,2,opt,name=cache,proto3" json:"cache,omitempty"`
	Elasticsearch *Data_Elasticsearch    `protobuf:"bytes,3,opt,name=elasticsearch,proto3" json:"elasticsearch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Data) Reset() {
	*x = Data{}
	mi := &file_proto_conf_conf_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conf_conf_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_proto_conf_conf_proto_rawDescGZIP(), []int{4}
}

func (x *Data) GetDatabase() *Data_Database {
	if x != nil {
		return x.Database
	}
	return nil
}

func (x *Data) GetCache() *Data_Cache {
	if x != nil {
		return x.Cache
	}
	return nil
}

func (x *Data) GetElasticsearch() *Data_Elasticsearch {
	if x != nil {
		return x.Elasticsearch
	}
	return nil
}

type Jwt struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Secret            string                 `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
	Expiration        *durationpb.Duration   `protobuf:"bytes,2,opt,name=expiration,proto3" json:"expiration,omitempty"`
	Issuer            string                 `protobuf:"bytes,3,opt,name=issuer,proto3" json:"issuer,omitempty"`
	RefreshExpiration *durationpb.Duration   `protobuf:"bytes,4,opt,name=refresh_expiration,json=refreshExpiration,proto3" json:"refresh_expiration,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Jwt) Reset() {
	*x = Jwt{}
	mi := &file_proto_conf_conf_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Jwt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Jwt) ProtoMessage() {}

func (x *Jwt) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conf_conf_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Jwt.ProtoReflect.Descriptor instead.
func (*Jwt) Descriptor() ([]byte, []int) {
	return file_proto_conf_conf_proto_rawDescGZIP(), []int{5}
}

func (x *Jwt) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *Jwt) GetExpiration() *durationpb.Duration {
	if x != nil {
		return x.Expiration
	}
	return nil
}

func (x *Jwt) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *Jwt) GetRefreshExpiration() *durationpb.Duration {
	if x != nil {
		return x.RefreshExpiration
	}
	return nil
}

type Auth struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Jwt           *Jwt                   `protobuf:"bytes,1,opt,name=jwt,proto3" json:"jwt,omitempty"`
	Oauth         *Auth_OAuth            `protobuf:"bytes,2,opt,name=oauth,proto3" json:"oauth,omitempty"`
	SmsCode       *Auth_SmsCode          `protobuf:"bytes,3,opt,name=sms_code,json=smsCode,proto3" json:"sms_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Auth) Reset() {
	*x = Auth{}
	mi := &file_proto_conf_conf_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Auth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auth) ProtoMessage() {}

func (x *Auth) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conf_conf_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auth.ProtoReflect.Descriptor instead.
func (*Auth) Descriptor() ([]byte, []int) {
	return file_proto_conf_conf_proto_rawDescGZIP(), []int{6}
}

func (x *Auth) GetJwt() *Jwt {
	if x != nil {
		return x.Jwt
	}
	return nil
}

func (x *Auth) GetOauth() *Auth_OAuth {
	if x != nil {
		return x.Oauth
	}
	return nil
}

func (x *Auth) GetSmsCode() *Auth_SmsCode {
	if x != nil {
		return x.SmsCode
	}
	return nil
}

type I18N struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Dir           string                 `protobuf:"bytes,1,opt,name=dir,proto3" json:"dir,omitempty"`
	Format        I18NFormat             `protobuf:"varint,2,opt,name=format,proto3,enum=conf.I18NFormat" json:"format,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *I18N) Reset() {
	*x = I18N{}
	mi := &file_proto_conf_conf_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *I18N) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*I18N) ProtoMessage() {}

func (x *I18N) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conf_conf_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use I18N.ProtoReflect.Descriptor instead.
func (*I18N) Descriptor() ([]byte, []int) {
	return file_proto_conf_conf_proto_rawDescGZIP(), []int{7}
}

func (x *I18N) GetDir() string {
	if x != nil {
		return x.Dir
	}
	return ""
}

func (x *I18N) GetFormat() I18NFormat {
	if x != nil {
		return x.Format
	}
	return I18NFormat_TOML
}

type Agent struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Agents        []*Agent_AgentConfig      `protobuf:"bytes,1,rep,name=agents,proto3" json:"agents,omitempty"`
	Tools         []*Agent_ToolConfig       `protobuf:"bytes,2,rep,name=tools,proto3" json:"tools,omitempty"`
	LlmUseTools   []*Agent_LLMUseToolConfig `protobuf:"bytes,3,rep,name=llm_use_tools,json=llmUseTools,proto3" json:"llm_use_tools,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Agent) Reset() {
	*x = Agent{}
	mi := &file_proto_conf_conf_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Agent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Agent) ProtoMessage() {}

func (x *Agent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conf_conf_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Agent.ProtoReflect.Descriptor instead.
func (*Agent) Descriptor() ([]byte, []int) {
	return file_proto_conf_conf_proto_rawDescGZIP(), []int{8}
}

func (x *Agent) GetAgents() []*Agent_AgentConfig {
	if x != nil {
		return x.Agents
	}
	return nil
}

func (x *Agent) GetTools() []*Agent_ToolConfig {
	if x != nil {
		return x.Tools
	}
	return nil
}

func (x *Agent) GetLlmUseTools() []*Agent_LLMUseToolConfig {
	if x != nil {
		return x.LlmUseTools
	}
	return nil
}

type Storage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Driver        Storage_StorageDriver  `protobuf:"varint,1,opt,name=driver,proto3,enum=conf.Storage_StorageDriver" json:"driver,omitempty"`
	Local         *Storage_Local         `protobuf:"bytes,2,opt,name=local,proto3" json:"local,omitempty"`
	Ali           *Storage_AliCloudOSS   `protobuf:"bytes,3,opt,name=ali,proto3" json:"ali,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Storage) Reset() {
	*x = Storage{}
	mi := &file_proto_conf_conf_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Storage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Storage) ProtoMessage() {}

func (x *Storage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conf_conf_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Storage.ProtoReflect.Descriptor instead.
func (*Storage) Descriptor() ([]byte, []int) {
	return file_proto_conf_conf_proto_rawDescGZIP(), []int{9}
}

func (x *Storage) GetDriver() Storage_StorageDriver {
	if x != nil {
		return x.Driver
	}
	return Storage_LOCAL
}

func (x *Storage) GetLocal() *Storage_Local {
	if x != nil {
		return x.Local
	}
	return nil
}

func (x *Storage) GetAli() *Storage_AliCloudOSS {
	if x != nil {
		return x.Ali
	}
	return nil
}

type Server_HTTP struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Network          string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Addr             string                 `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Timeout          *durationpb.Duration   `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	EnableCors       bool                   `protobuf:"varint,4,opt,name=enable_cors,json=enableCors,proto3" json:"enable_cors,omitempty"`
	AllowedOrigins   string                 `protobuf:"bytes,5,opt,name=allowed_origins,json=allowedOrigins,proto3" json:"allowed_origins,omitempty"`
	AllowedMethods   []string               `protobuf:"bytes,6,rep,name=allowed_methods,json=allowedMethods,proto3" json:"allowed_methods,omitempty"`
	AllowedHeaders   []string               `protobuf:"bytes,7,rep,name=allowed_headers,json=allowedHeaders,proto3" json:"allowed_headers,omitempty"`
	ExposedHeaders   []string               `protobuf:"bytes,8,rep,name=exposed_headers,json=exposedHeaders,proto3" json:"exposed_headers,omitempty"`
	AllowCredentials bool                   `protobuf:"varint,9,opt,name=allow_credentials,json=allowCredentials,proto3" json:"allow_credentials,omitempty"`
	GrpcAddr         string                 `protobuf:"bytes,10,opt,name=grpc_addr,json=grpcAddr,proto3" json:"grpc_addr,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Server_HTTP) Reset() {
	*x = Server_HTTP{}
	mi := &file_proto_conf_conf_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Server_HTTP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_HTTP) ProtoMessage() {}

func (x *Server_HTTP) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conf_conf_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_HTTP.ProtoReflect.Descriptor instead.
func (*Server_HTTP) Descriptor() ([]byte, []int) {
	return file_proto_conf_conf_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Server_HTTP) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Server_HTTP) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Server_HTTP) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *Server_HTTP) GetEnableCors() bool {
	if x != nil {
		return x.EnableCors
	}
	return false
}

func (x *Server_HTTP) GetAllowedOrigins() string {
	if x != nil {
		return x.AllowedOrigins
	}
	return ""
}

func (x *Server_HTTP) GetAllowedMethods() []string {
	if x != nil {
		return x.AllowedMethods
	}
	return nil
}

func (x *Server_HTTP) GetAllowedHeaders() []string {
	if x != nil {
		return x.AllowedHeaders
	}
	return nil
}

func (x *Server_HTTP) GetExposedHeaders() []string {
	if x != nil {
		return x.ExposedHeaders
	}
	return nil
}

func (x *Server_HTTP) GetAllowCredentials() bool {
	if x != nil {
		return x.AllowCredentials
	}
	return false
}

func (x *Server_HTTP) GetGrpcAddr() string {
	if x != nil {
		return x.GrpcAddr
	}
	return ""
}

type Server_GRPC struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Network       string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Addr          string                 `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Timeout       *durationpb.Duration   `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Server_GRPC) Reset() {
	*x = Server_GRPC{}
	mi := &file_proto_conf_conf_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Server_GRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_GRPC) ProtoMessage() {}

func (x *Server_GRPC) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conf_conf_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_GRPC.ProtoReflect.Descriptor instead.
func (*Server_GRPC) Descriptor() ([]byte, []int) {
	return file_proto_conf_conf_proto_rawDescGZIP(), []int{2, 1}
}

func (x *Server_GRPC) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Server_GRPC) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Server_GRPC) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type Data_Database struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Driver        string                 `protobuf:"bytes,1,opt,name=driver,proto3" json:"driver,omitempty"`
	Source        string                 `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Data_Database) Reset() {
	*x = Data_Database{}
	mi := &file_proto_conf_conf_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data_Database) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Database) ProtoMessage() {}

func (x *Data_Database) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conf_conf_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Database.ProtoReflect.Descriptor instead.
func (*Data_Database) Descriptor() ([]byte, []int) {
	return file_proto_conf_conf_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Data_Database) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *Data_Database) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type Data_Cache struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Driver        Data_Cache_CacheDriver `protobuf:"varint,1,opt,name=driver,proto3,enum=conf.Data_Cache_CacheDriver" json:"driver,omitempty"` // redis or memory
	Redis         *Redis                 `protobuf:"bytes,2,opt,name=redis,proto3" json:"redis,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Data_Cache) Reset() {
	*x = Data_Cache{}
	mi := &file_proto_conf_conf_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data_Cache) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Cache) ProtoMessage() {}

func (x *Data_Cache) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conf_conf_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Cache.ProtoReflect.Descriptor instead.
func (*Data_Cache) Descriptor() ([]byte, []int) {
	return file_proto_conf_conf_proto_rawDescGZIP(), []int{4, 1}
}

func (x *Data_Cache) GetDriver() Data_Cache_CacheDriver {
	if x != nil {
		return x.Driver
	}
	return Data_Cache_REDIS
}

func (x *Data_Cache) GetRedis() *Redis {
	if x != nil {
		return x.Redis
	}
	return nil
}

type Data_Elasticsearch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Addr          string                 `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Data_Elasticsearch) Reset() {
	*x = Data_Elasticsearch{}
	mi := &file_proto_conf_conf_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data_Elasticsearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Elasticsearch) ProtoMessage() {}

func (x *Data_Elasticsearch) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conf_conf_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Elasticsearch.ProtoReflect.Descriptor instead.
func (*Data_Elasticsearch) Descriptor() ([]byte, []int) {
	return file_proto_conf_conf_proto_rawDescGZIP(), []int{4, 2}
}

func (x *Data_Elasticsearch) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Data_Elasticsearch) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Data_Elasticsearch) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type Auth_OAuth struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	GoogleClientId     string                 `protobuf:"bytes,1,opt,name=google_client_id,json=googleClientId,proto3" json:"google_client_id,omitempty"`
	GoogleClientSecret string                 `protobuf:"bytes,2,opt,name=google_client_secret,json=googleClientSecret,proto3" json:"google_client_secret,omitempty"`
	GoogleRedirectUrl  string                 `protobuf:"bytes,3,opt,name=google_redirect_url,json=googleRedirectUrl,proto3" json:"google_redirect_url,omitempty"`
	GithubClientId     string                 `protobuf:"bytes,4,opt,name=github_client_id,json=githubClientId,proto3" json:"github_client_id,omitempty"`
	GithubClientSecret string                 `protobuf:"bytes,5,opt,name=github_client_secret,json=githubClientSecret,proto3" json:"github_client_secret,omitempty"`
	GithubRedirectUrl  string                 `protobuf:"bytes,6,opt,name=github_redirect_url,json=githubRedirectUrl,proto3" json:"github_redirect_url,omitempty"`
	WechatClientId     string                 `protobuf:"bytes,7,opt,name=wechat_client_id,json=wechatClientId,proto3" json:"wechat_client_id,omitempty"`
	WechatClientSecret string                 `protobuf:"bytes,8,opt,name=wechat_client_secret,json=wechatClientSecret,proto3" json:"wechat_client_secret,omitempty"`
	WechatRedirectUrl  string                 `protobuf:"bytes,9,opt,name=wechat_redirect_url,json=wechatRedirectUrl,proto3" json:"wechat_redirect_url,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Auth_OAuth) Reset() {
	*x = Auth_OAuth{}
	mi := &file_proto_conf_conf_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Auth_OAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auth_OAuth) ProtoMessage() {}

func (x *Auth_OAuth) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conf_conf_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auth_OAuth.ProtoReflect.Descriptor instead.
func (*Auth_OAuth) Descriptor() ([]byte, []int) {
	return file_proto_conf_conf_proto_rawDescGZIP(), []int{6, 0}
}

func (x *Auth_OAuth) GetGoogleClientId() string {
	if x != nil {
		return x.GoogleClientId
	}
	return ""
}

func (x *Auth_OAuth) GetGoogleClientSecret() string {
	if x != nil {
		return x.GoogleClientSecret
	}
	return ""
}

func (x *Auth_OAuth) GetGoogleRedirectUrl() string {
	if x != nil {
		return x.GoogleRedirectUrl
	}
	return ""
}

func (x *Auth_OAuth) GetGithubClientId() string {
	if x != nil {
		return x.GithubClientId
	}
	return ""
}

func (x *Auth_OAuth) GetGithubClientSecret() string {
	if x != nil {
		return x.GithubClientSecret
	}
	return ""
}

func (x *Auth_OAuth) GetGithubRedirectUrl() string {
	if x != nil {
		return x.GithubRedirectUrl
	}
	return ""
}

func (x *Auth_OAuth) GetWechatClientId() string {
	if x != nil {
		return x.WechatClientId
	}
	return ""
}

func (x *Auth_OAuth) GetWechatClientSecret() string {
	if x != nil {
		return x.WechatClientSecret
	}
	return ""
}

func (x *Auth_OAuth) GetWechatRedirectUrl() string {
	if x != nil {
		return x.WechatRedirectUrl
	}
	return ""
}

type Auth_SmsCode struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SignName        string                 `protobuf:"bytes,1,opt,name=sign_name,json=signName,proto3" json:"sign_name,omitempty"`
	TemplateCode    string                 `protobuf:"bytes,2,opt,name=template_code,json=templateCode,proto3" json:"template_code,omitempty"`
	ValidTime       *durationpb.Duration   `protobuf:"bytes,3,opt,name=valid_time,json=validTime,proto3" json:"valid_time,omitempty"`
	CodeLength      int64                  `protobuf:"varint,4,opt,name=code_length,json=codeLength,proto3" json:"code_length,omitempty"`
	Interval        *durationpb.Duration   `protobuf:"bytes,5,opt,name=interval,proto3" json:"interval,omitempty"`
	AccessKeyId     string                 `protobuf:"bytes,6,opt,name=access_key_id,json=accessKeyId,proto3" json:"access_key_id,omitempty"`
	AccessKeySecret string                 `protobuf:"bytes,7,opt,name=access_key_secret,json=accessKeySecret,proto3" json:"access_key_secret,omitempty"`
	Endpoint        string                 `protobuf:"bytes,8,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Auth_SmsCode) Reset() {
	*x = Auth_SmsCode{}
	mi := &file_proto_conf_conf_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Auth_SmsCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auth_SmsCode) ProtoMessage() {}

func (x *Auth_SmsCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conf_conf_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auth_SmsCode.ProtoReflect.Descriptor instead.
func (*Auth_SmsCode) Descriptor() ([]byte, []int) {
	return file_proto_conf_conf_proto_rawDescGZIP(), []int{6, 1}
}

func (x *Auth_SmsCode) GetSignName() string {
	if x != nil {
		return x.SignName
	}
	return ""
}

func (x *Auth_SmsCode) GetTemplateCode() string {
	if x != nil {
		return x.TemplateCode
	}
	return ""
}

func (x *Auth_SmsCode) GetValidTime() *durationpb.Duration {
	if x != nil {
		return x.ValidTime
	}
	return nil
}

func (x *Auth_SmsCode) GetCodeLength() int64 {
	if x != nil {
		return x.CodeLength
	}
	return 0
}

func (x *Auth_SmsCode) GetInterval() *durationpb.Duration {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (x *Auth_SmsCode) GetAccessKeyId() string {
	if x != nil {
		return x.AccessKeyId
	}
	return ""
}

func (x *Auth_SmsCode) GetAccessKeySecret() string {
	if x != nil {
		return x.AccessKeySecret
	}
	return ""
}

func (x *Auth_SmsCode) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

type Agent_AgentToolConfig struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Name          Agent_ToolName                 `protobuf:"varint,1,opt,name=name,proto3,enum=conf.Agent_ToolName" json:"name,omitempty"`
	Enabled       bool                           `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Type          Agent_AgentToolConfig_ToolType `protobuf:"varint,3,opt,name=type,proto3,enum=conf.Agent_AgentToolConfig_ToolType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Agent_AgentToolConfig) Reset() {
	*x = Agent_AgentToolConfig{}
	mi := &file_proto_conf_conf_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Agent_AgentToolConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Agent_AgentToolConfig) ProtoMessage() {}

func (x *Agent_AgentToolConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conf_conf_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Agent_AgentToolConfig.ProtoReflect.Descriptor instead.
func (*Agent_AgentToolConfig) Descriptor() ([]byte, []int) {
	return file_proto_conf_conf_proto_rawDescGZIP(), []int{8, 0}
}

func (x *Agent_AgentToolConfig) GetName() Agent_ToolName {
	if x != nil {
		return x.Name
	}
	return Agent_Completion
}

func (x *Agent_AgentToolConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Agent_AgentToolConfig) GetType() Agent_AgentToolConfig_ToolType {
	if x != nil {
		return x.Type
	}
	return Agent_AgentToolConfig_CodeUse
}

type Agent_AgentConfig struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Name          Agent_AgentName          `protobuf:"varint,1,opt,name=name,proto3,enum=conf.Agent_AgentName" json:"name,omitempty"`
	Enabled       bool                     `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Version       string                   `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Prompt        *Agent_PromptConfig      `protobuf:"bytes,4,opt,name=prompt,proto3" json:"prompt,omitempty"`
	Tools         []*Agent_AgentToolConfig `protobuf:"bytes,5,rep,name=tools,proto3" json:"tools,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Agent_AgentConfig) Reset() {
	*x = Agent_AgentConfig{}
	mi := &file_proto_conf_conf_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Agent_AgentConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Agent_AgentConfig) ProtoMessage() {}

func (x *Agent_AgentConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conf_conf_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Agent_AgentConfig.ProtoReflect.Descriptor instead.
func (*Agent_AgentConfig) Descriptor() ([]byte, []int) {
	return file_proto_conf_conf_proto_rawDescGZIP(), []int{8, 1}
}

func (x *Agent_AgentConfig) GetName() Agent_AgentName {
	if x != nil {
		return x.Name
	}
	return Agent_PlanAgent
}

func (x *Agent_AgentConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Agent_AgentConfig) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Agent_AgentConfig) GetPrompt() *Agent_PromptConfig {
	if x != nil {
		return x.Prompt
	}
	return nil
}

func (x *Agent_AgentConfig) GetTools() []*Agent_AgentToolConfig {
	if x != nil {
		return x.Tools
	}
	return nil
}

type Agent_PromptConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rounds        []*Agent_PromptRound   `protobuf:"bytes,1,rep,name=rounds,proto3" json:"rounds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Agent_PromptConfig) Reset() {
	*x = Agent_PromptConfig{}
	mi := &file_proto_conf_conf_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Agent_PromptConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Agent_PromptConfig) ProtoMessage() {}

func (x *Agent_PromptConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conf_conf_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Agent_PromptConfig.ProtoReflect.Descriptor instead.
func (*Agent_PromptConfig) Descriptor() ([]byte, []int) {
	return file_proto_conf_conf_proto_rawDescGZIP(), []int{8, 2}
}

func (x *Agent_PromptConfig) GetRounds() []*Agent_PromptRound {
	if x != nil {
		return x.Rounds
	}
	return nil
}

type Agent_PromptRound struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	System        string                 `protobuf:"bytes,1,opt,name=system,proto3" json:"system,omitempty"`
	User          string                 `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Agent_PromptRound) Reset() {
	*x = Agent_PromptRound{}
	mi := &file_proto_conf_conf_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Agent_PromptRound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Agent_PromptRound) ProtoMessage() {}

func (x *Agent_PromptRound) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conf_conf_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Agent_PromptRound.ProtoReflect.Descriptor instead.
func (*Agent_PromptRound) Descriptor() ([]byte, []int) {
	return file_proto_conf_conf_proto_rawDescGZIP(), []int{8, 3}
}

func (x *Agent_PromptRound) GetSystem() string {
	if x != nil {
		return x.System
	}
	return ""
}

func (x *Agent_PromptRound) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type Agent_ToolConfig struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Name          Agent_ToolName          `protobuf:"varint,1,opt,name=name,proto3,enum=conf.Agent_ToolName" json:"name,omitempty"`
	Description   string                  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	BaseUrl       string                  `protobuf:"bytes,3,opt,name=base_url,json=baseUrl,proto3" json:"base_url,omitempty"`
	ApiKey        string                  `protobuf:"bytes,4,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	Model         string                  `protobuf:"bytes,5,opt,name=model,proto3" json:"model,omitempty"`
	LlmUseConfig  *Agent_LLMUseToolConfig `protobuf:"bytes,6,opt,name=llm_use_config,json=llmUseConfig,proto3" json:"llm_use_config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Agent_ToolConfig) Reset() {
	*x = Agent_ToolConfig{}
	mi := &file_proto_conf_conf_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Agent_ToolConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Agent_ToolConfig) ProtoMessage() {}

func (x *Agent_ToolConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conf_conf_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Agent_ToolConfig.ProtoReflect.Descriptor instead.
func (*Agent_ToolConfig) Descriptor() ([]byte, []int) {
	return file_proto_conf_conf_proto_rawDescGZIP(), []int{8, 4}
}

func (x *Agent_ToolConfig) GetName() Agent_ToolName {
	if x != nil {
		return x.Name
	}
	return Agent_Completion
}

func (x *Agent_ToolConfig) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Agent_ToolConfig) GetBaseUrl() string {
	if x != nil {
		return x.BaseUrl
	}
	return ""
}

func (x *Agent_ToolConfig) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *Agent_ToolConfig) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Agent_ToolConfig) GetLlmUseConfig() *Agent_LLMUseToolConfig {
	if x != nil {
		return x.LlmUseConfig
	}
	return nil
}

type Agent_LLMUseToolConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Function      *Agent_FunctionConfig  `protobuf:"bytes,3,opt,name=function,proto3" json:"function,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Agent_LLMUseToolConfig) Reset() {
	*x = Agent_LLMUseToolConfig{}
	mi := &file_proto_conf_conf_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Agent_LLMUseToolConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Agent_LLMUseToolConfig) ProtoMessage() {}

func (x *Agent_LLMUseToolConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conf_conf_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Agent_LLMUseToolConfig.ProtoReflect.Descriptor instead.
func (*Agent_LLMUseToolConfig) Descriptor() ([]byte, []int) {
	return file_proto_conf_conf_proto_rawDescGZIP(), []int{8, 5}
}

func (x *Agent_LLMUseToolConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Agent_LLMUseToolConfig) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Agent_LLMUseToolConfig) GetFunction() *Agent_FunctionConfig {
	if x != nil {
		return x.Function
	}
	return nil
}

type Agent_FunctionConfig struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Name          string                    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                    `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Parameters    *Agent_FunctionParameters `protobuf:"bytes,3,opt,name=parameters,proto3" json:"parameters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Agent_FunctionConfig) Reset() {
	*x = Agent_FunctionConfig{}
	mi := &file_proto_conf_conf_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Agent_FunctionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Agent_FunctionConfig) ProtoMessage() {}

func (x *Agent_FunctionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conf_conf_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Agent_FunctionConfig.ProtoReflect.Descriptor instead.
func (*Agent_FunctionConfig) Descriptor() ([]byte, []int) {
	return file_proto_conf_conf_proto_rawDescGZIP(), []int{8, 6}
}

func (x *Agent_FunctionConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Agent_FunctionConfig) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Agent_FunctionConfig) GetParameters() *Agent_FunctionParameters {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type Agent_FunctionParameters struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	Type          string                                        `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Properties    map[string]*Agent_FunctionParameters_Property `protobuf:"bytes,2,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Required      []string                                      `protobuf:"bytes,3,rep,name=required,proto3" json:"required,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Agent_FunctionParameters) Reset() {
	*x = Agent_FunctionParameters{}
	mi := &file_proto_conf_conf_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Agent_FunctionParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Agent_FunctionParameters) ProtoMessage() {}

func (x *Agent_FunctionParameters) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conf_conf_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Agent_FunctionParameters.ProtoReflect.Descriptor instead.
func (*Agent_FunctionParameters) Descriptor() ([]byte, []int) {
	return file_proto_conf_conf_proto_rawDescGZIP(), []int{8, 7}
}

func (x *Agent_FunctionParameters) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Agent_FunctionParameters) GetProperties() map[string]*Agent_FunctionParameters_Property {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *Agent_FunctionParameters) GetRequired() []string {
	if x != nil {
		return x.Required
	}
	return nil
}

type Agent_FunctionParameters_Property struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Agent_FunctionParameters_Property) Reset() {
	*x = Agent_FunctionParameters_Property{}
	mi := &file_proto_conf_conf_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Agent_FunctionParameters_Property) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Agent_FunctionParameters_Property) ProtoMessage() {}

func (x *Agent_FunctionParameters_Property) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conf_conf_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Agent_FunctionParameters_Property.ProtoReflect.Descriptor instead.
func (*Agent_FunctionParameters_Property) Descriptor() ([]byte, []int) {
	return file_proto_conf_conf_proto_rawDescGZIP(), []int{8, 7, 0}
}

func (x *Agent_FunctionParameters_Property) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Agent_FunctionParameters_Property) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Storage_Local struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Root          string                 `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	UploadMethod  string                 `protobuf:"bytes,2,opt,name=uploadMethod,proto3" json:"uploadMethod,omitempty"`
	UploadURL     string                 `protobuf:"bytes,3,opt,name=uploadURL,proto3" json:"uploadURL,omitempty"`
	PreviewURL    string                 `protobuf:"bytes,4,opt,name=previewURL,proto3" json:"previewURL,omitempty"`
	Endpoint      string                 `protobuf:"bytes,5,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Storage_Local) Reset() {
	*x = Storage_Local{}
	mi := &file_proto_conf_conf_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Storage_Local) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Storage_Local) ProtoMessage() {}

func (x *Storage_Local) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conf_conf_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Storage_Local.ProtoReflect.Descriptor instead.
func (*Storage_Local) Descriptor() ([]byte, []int) {
	return file_proto_conf_conf_proto_rawDescGZIP(), []int{9, 0}
}

func (x *Storage_Local) GetRoot() string {
	if x != nil {
		return x.Root
	}
	return ""
}

func (x *Storage_Local) GetUploadMethod() string {
	if x != nil {
		return x.UploadMethod
	}
	return ""
}

func (x *Storage_Local) GetUploadURL() string {
	if x != nil {
		return x.UploadURL
	}
	return ""
}

func (x *Storage_Local) GetPreviewURL() string {
	if x != nil {
		return x.PreviewURL
	}
	return ""
}

func (x *Storage_Local) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

type Storage_AliCloudOSS struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Endpoint        string                 `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	AccessKeyId     string                 `protobuf:"bytes,2,opt,name=access_key_id,json=accessKeyId,proto3" json:"access_key_id,omitempty"`
	AccessKeySecret string                 `protobuf:"bytes,3,opt,name=access_key_secret,json=accessKeySecret,proto3" json:"access_key_secret,omitempty"`
	BucketName      string                 `protobuf:"bytes,4,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Storage_AliCloudOSS) Reset() {
	*x = Storage_AliCloudOSS{}
	mi := &file_proto_conf_conf_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Storage_AliCloudOSS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Storage_AliCloudOSS) ProtoMessage() {}

func (x *Storage_AliCloudOSS) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conf_conf_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Storage_AliCloudOSS.ProtoReflect.Descriptor instead.
func (*Storage_AliCloudOSS) Descriptor() ([]byte, []int) {
	return file_proto_conf_conf_proto_rawDescGZIP(), []int{9, 1}
}

func (x *Storage_AliCloudOSS) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *Storage_AliCloudOSS) GetAccessKeyId() string {
	if x != nil {
		return x.AccessKeyId
	}
	return ""
}

func (x *Storage_AliCloudOSS) GetAccessKeySecret() string {
	if x != nil {
		return x.AccessKeySecret
	}
	return ""
}

func (x *Storage_AliCloudOSS) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

var File_proto_conf_conf_proto protoreflect.FileDescriptor

var file_proto_conf_conf_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x2f, 0x63, 0x6f, 0x6e,
	0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x63, 0x6f, 0x6e, 0x66, 0x1a, 0x1e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaf, 0x02,
	0x0a, 0x09, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x12, 0x33, 0x0a, 0x0b, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x1b, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x12, 0x24, 0x0a,
	0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x06, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61,
	0x75, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x04, 0x69, 0x31, 0x38, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x49, 0x31, 0x38, 0x6e, 0x52, 0x04, 0x69,
	0x31, 0x38, 0x6e, 0x12, 0x21, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52,
	0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x22,
	0xc4, 0x01, 0x0a, 0x03, 0x4c, 0x6f, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x25, 0x0a,
	0x0e, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x12, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x63, 0x6b, 0x74, 0x72, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x11, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0xbc, 0x04, 0x0a, 0x06, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x12, 0x25, 0x0a, 0x04, 0x68, 0x74, 0x74, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x48, 0x54,
	0x54, 0x50, 0x52, 0x04, 0x68, 0x74, 0x74, 0x70, 0x12, 0x25, 0x0a, 0x04, 0x67, 0x72, 0x70, 0x63,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x52, 0x50, 0x43, 0x52, 0x04, 0x67, 0x72, 0x70, 0x63, 0x1a,
	0xf8, 0x02, 0x0a, 0x04, 0x48, 0x54, 0x54, 0x50, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x33, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x72, 0x73, 0x12, 0x27, 0x0a, 0x0f,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x12, 0x27,
	0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x6f, 0x73,
	0x65, 0x64, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0e, 0x65, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x12, 0x2b, 0x0a, 0x11, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x61, 0x6c, 0x6c,
	0x6f, 0x77, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x67, 0x72, 0x70, 0x63, 0x41, 0x64, 0x64, 0x72, 0x1a, 0x69, 0x0a, 0x04, 0x47, 0x52,
	0x50, 0x43, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72,
	0x12, 0x33, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x9d, 0x02, 0x0a, 0x05, 0x52, 0x65, 0x64, 0x69, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x3c, 0x0a,
	0x0c, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b,
	0x72, 0x65, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x3e, 0x0a, 0x0d, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x62, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x64, 0x62, 0x12, 0x3c, 0x0a, 0x0c, 0x64, 0x69, 0x61, 0x6c, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x6c, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0xc1, 0x03, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2f,
	0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12,
	0x26, 0x0a, 0x05, 0x63, 0x61, 0x63, 0x68, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x52, 0x05, 0x63, 0x61, 0x63, 0x68, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x65, 0x6c, 0x61, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x45, 0x6c, 0x61, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x0d, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x1a, 0x3a, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x1a, 0x86, 0x01, 0x0a, 0x05, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x34, 0x0a,
	0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x2e,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x06, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x05, 0x72, 0x65, 0x64, 0x69, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x52,
	0x05, 0x72, 0x65, 0x64, 0x69, 0x73, 0x22, 0x24, 0x0a, 0x0b, 0x43, 0x61, 0x63, 0x68, 0x65, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x45, 0x44, 0x49, 0x53, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x45, 0x4d, 0x4f, 0x52, 0x59, 0x10, 0x01, 0x1a, 0x5b, 0x0a, 0x0d,
	0x45, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x12, 0x0a,
	0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xba, 0x01, 0x0a, 0x03, 0x4a, 0x77,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x12, 0x48, 0x0a, 0x12,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x11, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xf4, 0x06, 0x0a, 0x04, 0x41, 0x75, 0x74, 0x68, 0x12,
	0x1b, 0x0a, 0x03, 0x6a, 0x77, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x2e, 0x4a, 0x77, 0x74, 0x52, 0x03, 0x6a, 0x77, 0x74, 0x12, 0x26, 0x0a, 0x05,
	0x6f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x2e, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x52, 0x05, 0x6f,
	0x61, 0x75, 0x74, 0x68, 0x12, 0x2d, 0x0a, 0x08, 0x73, 0x6d, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x2e, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x73, 0x6d, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x1a, 0xab, 0x03, 0x0a, 0x05, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x12, 0x28, 0x0a,
	0x10, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x52, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x5f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x5f,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x30, 0x0a, 0x14, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x77,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x12, 0x2e, 0x0a, 0x13, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x72, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72,
	0x6c, 0x1a, 0xc9, 0x02, 0x0a, 0x07, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x38, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x64,
	0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x63, 0x6f, 0x64, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x35, 0x0a, 0x08, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x6b, 0x65, 0x79, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x42, 0x0a,
	0x04, 0x49, 0x31, 0x38, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x28, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x49,
	0x31, 0x38, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x22, 0xb3, 0x0c, 0x0a, 0x05, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x05,
	0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x6f, 0x6f, 0x6c, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x05, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x12, 0x40, 0x0a, 0x0d, 0x6c, 0x6c,
	0x6d, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4c,
	0x4c, 0x4d, 0x55, 0x73, 0x65, 0x54, 0x6f, 0x6f, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x0b, 0x6c, 0x6c, 0x6d, 0x55, 0x73, 0x65, 0x54, 0x6f, 0x6f, 0x6c, 0x73, 0x1a, 0xb4, 0x01, 0x0a,
	0x0f, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6f, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x28, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x6f, 0x6f, 0x6c,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6f, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x54, 0x6f, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x23,
	0x0a, 0x08, 0x54, 0x6f, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x6f,
	0x64, 0x65, 0x55, 0x73, 0x65, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x4c, 0x4d, 0x55, 0x73,
	0x65, 0x10, 0x01, 0x1a, 0xd1, 0x01, 0x0a, 0x0b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x29, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x70, 0x72,
	0x6f, 0x6d, 0x70, 0x74, 0x12, 0x31, 0x0a, 0x05, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6f, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x05, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x1a, 0x3f, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x6d, 0x70,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2f, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64,
	0x52, 0x06, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x6d,
	0x70, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x1a, 0xe6, 0x01, 0x0a, 0x0a, 0x54, 0x6f, 0x6f, 0x6c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x28, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x6f,
	0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19,
	0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x62, 0x61, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x42, 0x0a, 0x0e, 0x6c, 0x6c, 0x6d, 0x5f,
	0x75, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x4c,
	0x4d, 0x55, 0x73, 0x65, 0x54, 0x6f, 0x6f, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c,
	0x6c, 0x6c, 0x6d, 0x55, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x72, 0x0a, 0x10,
	0x4c, 0x4c, 0x4d, 0x55, 0x73, 0x65, 0x54, 0x6f, 0x6f, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x1a, 0x86, 0x01, 0x0a, 0x0e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x0a, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x0a, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x1a, 0xbe, 0x02, 0x0a, 0x12, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x4e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x1a, 0x40, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0x66, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x1a, 0x0a, 0x09, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x6c, 0x61, 0x6e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x10, 0x00, 0x22, 0x3f, 0x0a, 0x08, 0x54, 0x6f, 0x6f, 0x6c, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x10, 0x01, 0x12,
	0x16, 0x0a, 0x12, 0x49, 0x6e, 0x64, 0x75, 0x63, 0x69, 0x6e, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x72, 0x69, 0x70, 0x10, 0x02, 0x22, 0xf7, 0x03, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x52, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x05, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x12, 0x2b, 0x0a, 0x03, 0x61, 0x6c, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x41, 0x6c, 0x69, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x4f, 0x53, 0x53, 0x52, 0x03, 0x61, 0x6c, 0x69,
	0x1a, 0x99, 0x01, 0x0a, 0x05, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f,
	0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x52, 0x4c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x52, 0x4c,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x55, 0x52, 0x4c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x55, 0x52, 0x4c,
	0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x1a, 0x9a, 0x01, 0x0a,
	0x0b, 0x41, 0x6c, 0x69, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x4f, 0x53, 0x53, 0x12, 0x1a, 0x0a, 0x08,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b,
	0x65, 0x79, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x26, 0x0a, 0x0d, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x4f,
	0x43, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x4c, 0x49, 0x59, 0x55, 0x4e, 0x10,
	0x01, 0x2a, 0x37, 0x0a, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a,
	0x03, 0x44, 0x45, 0x56, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x52, 0x4f, 0x44, 0x10, 0x02,
	0x12, 0x08, 0x0a, 0x04, 0x54, 0x45, 0x53, 0x54, 0x10, 0x03, 0x2a, 0x20, 0x0a, 0x0a, 0x49, 0x31,
	0x38, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x4f, 0x4d, 0x4c,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x01, 0x42, 0x2d, 0x5a, 0x2b,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x74, 0x65, 0x72, 0x2d,
	0x78, 0x2f, 0x69, 0x74, 0x65, 0x72, 0x2d, 0x78, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x3b, 0x63, 0x6f, 0x6e, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_proto_conf_conf_proto_rawDescOnce sync.Once
	file_proto_conf_conf_proto_rawDescData = file_proto_conf_conf_proto_rawDesc
)

func file_proto_conf_conf_proto_rawDescGZIP() []byte {
	file_proto_conf_conf_proto_rawDescOnce.Do(func() {
		file_proto_conf_conf_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_conf_conf_proto_rawDescData)
	})
	return file_proto_conf_conf_proto_rawDescData
}

var file_proto_conf_conf_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_proto_conf_conf_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_proto_conf_conf_proto_goTypes = []any{
	(Environment)(0),                          // 0: conf.Environment
	(I18NFormat)(0),                           // 1: conf.I18nFormat
	(Data_Cache_CacheDriver)(0),               // 2: conf.Data.Cache.CacheDriver
	(Agent_AgentName)(0),                      // 3: conf.Agent.AgentName
	(Agent_ToolName)(0),                       // 4: conf.Agent.ToolName
	(Agent_AgentToolConfig_ToolType)(0),       // 5: conf.Agent.AgentToolConfig.ToolType
	(Storage_StorageDriver)(0),                // 6: conf.Storage.StorageDriver
	(*Bootstrap)(nil),                         // 7: conf.Bootstrap
	(*Log)(nil),                               // 8: conf.Log
	(*Server)(nil),                            // 9: conf.Server
	(*Redis)(nil),                             // 10: conf.Redis
	(*Data)(nil),                              // 11: conf.Data
	(*Jwt)(nil),                               // 12: conf.Jwt
	(*Auth)(nil),                              // 13: conf.Auth
	(*I18N)(nil),                              // 14: conf.I18n
	(*Agent)(nil),                             // 15: conf.Agent
	(*Storage)(nil),                           // 16: conf.Storage
	(*Server_HTTP)(nil),                       // 17: conf.Server.HTTP
	(*Server_GRPC)(nil),                       // 18: conf.Server.GRPC
	(*Data_Database)(nil),                     // 19: conf.Data.Database
	(*Data_Cache)(nil),                        // 20: conf.Data.Cache
	(*Data_Elasticsearch)(nil),                // 21: conf.Data.Elasticsearch
	(*Auth_OAuth)(nil),                        // 22: conf.Auth.OAuth
	(*Auth_SmsCode)(nil),                      // 23: conf.Auth.SmsCode
	(*Agent_AgentToolConfig)(nil),             // 24: conf.Agent.AgentToolConfig
	(*Agent_AgentConfig)(nil),                 // 25: conf.Agent.AgentConfig
	(*Agent_PromptConfig)(nil),                // 26: conf.Agent.PromptConfig
	(*Agent_PromptRound)(nil),                 // 27: conf.Agent.PromptRound
	(*Agent_ToolConfig)(nil),                  // 28: conf.Agent.ToolConfig
	(*Agent_LLMUseToolConfig)(nil),            // 29: conf.Agent.LLMUseToolConfig
	(*Agent_FunctionConfig)(nil),              // 30: conf.Agent.FunctionConfig
	(*Agent_FunctionParameters)(nil),          // 31: conf.Agent.FunctionParameters
	(*Agent_FunctionParameters_Property)(nil), // 32: conf.Agent.FunctionParameters.Property
	nil,                         // 33: conf.Agent.FunctionParameters.PropertiesEntry
	(*Storage_Local)(nil),       // 34: conf.Storage.Local
	(*Storage_AliCloudOSS)(nil), // 35: conf.Storage.AliCloudOSS
	(*durationpb.Duration)(nil), // 36: google.protobuf.Duration
}
var file_proto_conf_conf_proto_depIdxs = []int32{
	0,  // 0: conf.Bootstrap.environment:type_name -> conf.Environment
	8,  // 1: conf.Bootstrap.log:type_name -> conf.Log
	9,  // 2: conf.Bootstrap.server:type_name -> conf.Server
	11, // 3: conf.Bootstrap.data:type_name -> conf.Data
	13, // 4: conf.Bootstrap.auth:type_name -> conf.Auth
	14, // 5: conf.Bootstrap.i18n:type_name -> conf.I18n
	15, // 6: conf.Bootstrap.agent:type_name -> conf.Agent
	16, // 7: conf.Bootstrap.storage:type_name -> conf.Storage
	17, // 8: conf.Server.http:type_name -> conf.Server.HTTP
	18, // 9: conf.Server.grpc:type_name -> conf.Server.GRPC
	36, // 10: conf.Redis.read_timeout:type_name -> google.protobuf.Duration
	36, // 11: conf.Redis.write_timeout:type_name -> google.protobuf.Duration
	36, // 12: conf.Redis.dial_timeout:type_name -> google.protobuf.Duration
	19, // 13: conf.Data.database:type_name -> conf.Data.Database
	20, // 14: conf.Data.cache:type_name -> conf.Data.Cache
	21, // 15: conf.Data.elasticsearch:type_name -> conf.Data.Elasticsearch
	36, // 16: conf.Jwt.expiration:type_name -> google.protobuf.Duration
	36, // 17: conf.Jwt.refresh_expiration:type_name -> google.protobuf.Duration
	12, // 18: conf.Auth.jwt:type_name -> conf.Jwt
	22, // 19: conf.Auth.oauth:type_name -> conf.Auth.OAuth
	23, // 20: conf.Auth.sms_code:type_name -> conf.Auth.SmsCode
	1,  // 21: conf.I18n.format:type_name -> conf.I18nFormat
	25, // 22: conf.Agent.agents:type_name -> conf.Agent.AgentConfig
	28, // 23: conf.Agent.tools:type_name -> conf.Agent.ToolConfig
	29, // 24: conf.Agent.llm_use_tools:type_name -> conf.Agent.LLMUseToolConfig
	6,  // 25: conf.Storage.driver:type_name -> conf.Storage.StorageDriver
	34, // 26: conf.Storage.local:type_name -> conf.Storage.Local
	35, // 27: conf.Storage.ali:type_name -> conf.Storage.AliCloudOSS
	36, // 28: conf.Server.HTTP.timeout:type_name -> google.protobuf.Duration
	36, // 29: conf.Server.GRPC.timeout:type_name -> google.protobuf.Duration
	2,  // 30: conf.Data.Cache.driver:type_name -> conf.Data.Cache.CacheDriver
	10, // 31: conf.Data.Cache.redis:type_name -> conf.Redis
	36, // 32: conf.Auth.SmsCode.valid_time:type_name -> google.protobuf.Duration
	36, // 33: conf.Auth.SmsCode.interval:type_name -> google.protobuf.Duration
	4,  // 34: conf.Agent.AgentToolConfig.name:type_name -> conf.Agent.ToolName
	5,  // 35: conf.Agent.AgentToolConfig.type:type_name -> conf.Agent.AgentToolConfig.ToolType
	3,  // 36: conf.Agent.AgentConfig.name:type_name -> conf.Agent.AgentName
	26, // 37: conf.Agent.AgentConfig.prompt:type_name -> conf.Agent.PromptConfig
	24, // 38: conf.Agent.AgentConfig.tools:type_name -> conf.Agent.AgentToolConfig
	27, // 39: conf.Agent.PromptConfig.rounds:type_name -> conf.Agent.PromptRound
	4,  // 40: conf.Agent.ToolConfig.name:type_name -> conf.Agent.ToolName
	29, // 41: conf.Agent.ToolConfig.llm_use_config:type_name -> conf.Agent.LLMUseToolConfig
	30, // 42: conf.Agent.LLMUseToolConfig.function:type_name -> conf.Agent.FunctionConfig
	31, // 43: conf.Agent.FunctionConfig.parameters:type_name -> conf.Agent.FunctionParameters
	33, // 44: conf.Agent.FunctionParameters.properties:type_name -> conf.Agent.FunctionParameters.PropertiesEntry
	32, // 45: conf.Agent.FunctionParameters.PropertiesEntry.value:type_name -> conf.Agent.FunctionParameters.Property
	46, // [46:46] is the sub-list for method output_type
	46, // [46:46] is the sub-list for method input_type
	46, // [46:46] is the sub-list for extension type_name
	46, // [46:46] is the sub-list for extension extendee
	0,  // [0:46] is the sub-list for field type_name
}

func init() { file_proto_conf_conf_proto_init() }
func file_proto_conf_conf_proto_init() {
	if File_proto_conf_conf_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_conf_conf_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_conf_conf_proto_goTypes,
		DependencyIndexes: file_proto_conf_conf_proto_depIdxs,
		EnumInfos:         file_proto_conf_conf_proto_enumTypes,
		MessageInfos:      file_proto_conf_conf_proto_msgTypes,
	}.Build()
	File_proto_conf_conf_proto = out.File
	file_proto_conf_conf_proto_rawDesc = nil
	file_proto_conf_conf_proto_goTypes = nil
	file_proto_conf_conf_proto_depIdxs = nil
}
