// Code generated by protoc-gen-validatex. DO NOT EDIT.

// versions:
//  protoc-gen-validatex v0.3.1-dev

package v1

import (
	context "context"
	fmt "fmt"
	i18n "github.com/nicksnyder/go-i18n/v2/i18n"
	validatex "github.com/protoc-gen/protoc-gen-validatex/pkg/validatex"
)

func (x *SignInRequest) Validate(ctx context.Context) error {
	if x == nil {
		return nil
	}
	if validatex.ValidEmail(x.Email) != nil {
		return fmt.Errorf(validatex.MustLocalize(ctx,
			&i18n.LocalizeConfig{MessageID: "EmailInvalid", TemplateData: map[string]string{"FieldName": "email"}},
			"field email must be a valid email"))
	}
	if len(x.Password) < 5 {
		return fmt.Errorf("field password must have at least 5 characters")
	}
	if len(x.Password) > 50 {
		return fmt.Errorf("field password must have at most 50 characters")
	}
	return nil
}
func (x *SignInResponse) Validate(ctx context.Context) error {
	if x == nil {
		return nil
	}
	return nil
}
func (x *SignInWithOAuthRequest) Validate(ctx context.Context) error {
	if x == nil {
		return nil
	}
	if len(x.Code) < 1 {
		return fmt.Errorf("field code must have at least 1 characters")
	}
	if len(x.Code) > 256 {
		return fmt.Errorf("field code must have at most 256 characters")
	}
	return nil
}
func (x *SignInWithOAuthResponse) Validate(ctx context.Context) error {
	if x == nil {
		return nil
	}
	return nil
}
func (x *SignUpRequest) Validate(ctx context.Context) error {
	if x == nil {
		return nil
	}
	if validatex.ValidEmail(x.Email) != nil {
		return fmt.Errorf(validatex.MustLocalize(ctx,
			&i18n.LocalizeConfig{MessageID: "EmailInvalid", TemplateData: map[string]string{"FieldName": "email"}},
			"field email must be a valid email"))
	}
	if len(x.Password) < 5 {
		return fmt.Errorf("field password must have at least 5 characters")
	}
	if len(x.Password) > 50 {
		return fmt.Errorf("field password must have at most 50 characters")
	}
	return nil
}
func (x *SignUpResponse) Validate(ctx context.Context) error {
	if x == nil {
		return nil
	}
	return nil
}
func (x *RequestPasswordResetRequest) Validate(ctx context.Context) error {
	if x == nil {
		return nil
	}
	return nil
}
func (x *RequestPasswordResetResponse) Validate(ctx context.Context) error {
	if x == nil {
		return nil
	}
	return nil
}
func (x *VerifyPasswordResetTokenRequest) Validate(ctx context.Context) error {
	if x == nil {
		return nil
	}
	return nil
}
func (x *VerifyPasswordResetTokenResponse) Validate(ctx context.Context) error {
	if x == nil {
		return nil
	}
	return nil
}
func (x *ResetPasswordRequest) Validate(ctx context.Context) error {
	if x == nil {
		return nil
	}
	return nil
}
func (x *ResetPasswordResponse) Validate(ctx context.Context) error {
	if x == nil {
		return nil
	}
	return nil
}
func (x *RefreshTokenRequest) Validate(ctx context.Context) error {
	if x == nil {
		return nil
	}
	return nil
}
func (x *RefreshTokenResponse) Validate(ctx context.Context) error {
	if x == nil {
		return nil
	}
	return nil
}

func init() {
	validatex.Init18n("./i18n/validatex")
}
