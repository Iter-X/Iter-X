components:
    schemas:
        BadRequest:
            example:
                code: 3
                details:
                    - '@type': type.googleapis.com/google.rpc.ErrorInfo
                      domain: ""
                      metadata:
                        field: phoneNumber
                      reason: INVALID_PARAMETERS
                message: must be at least 11 characters long
            properties:
                code:
                    type: integer
                details:
                    items:
                        properties:
                            '@type':
                                type: string
                            domain:
                                type: string
                            metadata:
                                type: object
                            reason:
                                type: string
                        type: object
                    type: array
                message:
                    type: string
            type: object
        InternalServerError:
            example:
                code: 3
                details:
                    - '@type': type.googleapis.com/google.rpc.ErrorInfo
                      domain: ""
                      metadata:
                        field: phoneNumber
                      reason: INVALID_PARAMETERS
                message: must be at least 11 characters long
            properties:
                code:
                    type: integer
                details:
                    items:
                        properties:
                            '@type':
                                type: string
                            domain:
                                type: string
                            metadata:
                                type: object
                            reason:
                                type: string
                        type: object
                    type: array
                message:
                    type: string
            type: object
        Unauthorized:
            example:
                code: 3
                details:
                    - '@type': type.googleapis.com/google.rpc.ErrorInfo
                      domain: ""
                      metadata:
                        field: phoneNumber
                      reason: INVALID_PARAMETERS
                message: must be at least 11 characters long
            properties:
                code:
                    type: integer
                details:
                    items:
                        properties:
                            '@type':
                                type: string
                            domain:
                                type: string
                            metadata:
                                type: object
                            reason:
                                type: string
                        type: object
                    type: array
                message:
                    type: string
            type: object
        auth.v1.OneClickLoginRequest:
            example:
                token: ""
            properties:
                token:
                    type: string
            type: object
        auth.v1.OneClickLoginResponse:
            example:
                expiresIn: 0
                refreshToken: ""
                token: ""
            properties:
                expiresIn:
                    format: double
                    type: number
                refreshToken:
                    type: string
                token:
                    type: string
            type: object
        auth.v1.RefreshTokenRequest:
            example:
                refreshToken: ""
            properties:
                refreshToken:
                    type: string
            type: object
        auth.v1.RefreshTokenResponse:
            example:
                expiresIn: 0
                token: ""
            properties:
                expiresIn:
                    format: double
                    type: number
                token:
                    type: string
            type: object
        auth.v1.RequestPasswordResetRequest:
            example:
                email: ""
            properties:
                email:
                    type: string
            type: object
        auth.v1.RequestPasswordResetResponse:
            example:
                status: ""
            properties:
                status:
                    type: string
            type: object
        auth.v1.ResetPasswordRequest:
            example:
                newPassword: ""
                token: ""
            properties:
                newPassword:
                    type: string
                token:
                    type: string
            type: object
        auth.v1.ResetPasswordResponse:
            example:
                status: ""
            properties:
                status:
                    type: string
            type: object
        auth.v1.SendSmsCodeRequest:
            example:
                phoneNumber: ""
            properties:
                phoneNumber:
                    type: string
            type: object
        auth.v1.SendSmsCodeResponse:
            example:
                expireTime: 0
                interval: 0
            properties:
                expireTime:
                    format: int64
                    type: integer
                interval:
                    format: int64
                    type: integer
            type: object
        auth.v1.SignInRequest:
            example:
                email: ""
                password: ""
            properties:
                email:
                    type: string
                password:
                    type: string
            type: object
        auth.v1.SignInResponse:
            example:
                expiresIn: 0
                refreshToken: ""
                token: ""
            properties:
                expiresIn:
                    format: double
                    type: number
                refreshToken:
                    type: string
                token:
                    type: string
            type: object
        auth.v1.SignInWithOAuthRequest:
            example:
                code: ""
                provider: GOOGLE
            properties:
                code:
                    type: string
                provider:
                    enum:
                        - GOOGLE
                        - GITHUB
                        - WECHAT
                    format: enum
                    type: string
            type: object
        auth.v1.SignInWithOAuthResponse:
            example:
                token: ""
            properties:
                token:
                    type: string
            type: object
        auth.v1.SignUpRequest:
            example:
                email: ""
                password: ""
            properties:
                email:
                    type: string
                password:
                    type: string
            type: object
        auth.v1.SignUpResponse:
            example:
                expiresIn: 0
                refreshToken: ""
                token: ""
            properties:
                expiresIn:
                    format: double
                    type: number
                refreshToken:
                    type: string
                token:
                    type: string
            type: object
        auth.v1.VerifyPasswordResetTokenResponse:
            example:
                valid: true
            properties:
                valid:
                    type: boolean
            type: object
        auth.v1.VerifySmsCodeRequest:
            example:
                phoneNumber: ""
                verifyCode: ""
            properties:
                phoneNumber:
                    type: string
                verifyCode:
                    type: string
            type: object
        auth.v1.VerifySmsCodeResponse:
            example:
                expiresIn: 0
                refreshToken: ""
                token: ""
            properties:
                expiresIn:
                    format: double
                    type: number
                refreshToken:
                    type: string
                token:
                    type: string
            type: object
        geo.v1.City:
            example:
                code: ""
                id: 0
                name: ""
                nameCn: ""
                nameEn: ""
                nameLocal: ""
                state: null
                stateId: 0
            properties:
                code:
                    type: string
                id:
                    format: int32
                    type: integer
                name:
                    type: string
                nameCn:
                    type: string
                nameEn:
                    type: string
                nameLocal:
                    type: string
                state:
                    $ref: '#/components/schemas/geo.v1.State'
                stateId:
                    format: int32
                    type: integer
            type: object
        geo.v1.Continent:
            example:
                code: ""
                id: 0
                name: ""
                nameCn: ""
                nameEn: ""
                nameLocal: ""
            properties:
                code:
                    type: string
                id:
                    format: int32
                    type: integer
                name:
                    type: string
                nameCn:
                    type: string
                nameEn:
                    type: string
                nameLocal:
                    type: string
            type: object
        geo.v1.Country:
            example:
                code: ""
                continent: null
                continentId: 0
                id: 0
                imageUrl: ""
                name: ""
                nameCn: ""
                nameEn: ""
                nameLocal: ""
            properties:
                code:
                    type: string
                continent:
                    $ref: '#/components/schemas/geo.v1.Continent'
                continentId:
                    format: int32
                    type: integer
                id:
                    format: int32
                    type: integer
                imageUrl:
                    type: string
                name:
                    type: string
                nameCn:
                    type: string
                nameEn:
                    type: string
                nameLocal:
                    type: string
            type: object
        geo.v1.ListCitiesResponse:
            example:
                cities: null
                total: 0
            properties:
                cities:
                    items:
                        $ref: '#/components/schemas/geo.v1.City'
                    type: array
                total:
                    format: int64
                    type: integer
            type: object
        geo.v1.ListContinentsResponse:
            example:
                continents: null
                total: 0
            properties:
                continents:
                    items:
                        $ref: '#/components/schemas/geo.v1.Continent'
                    type: array
                total:
                    format: int64
                    type: integer
            type: object
        geo.v1.ListCountriesResponse:
            example:
                countries: null
                total: 0
            properties:
                countries:
                    items:
                        $ref: '#/components/schemas/geo.v1.Country'
                    type: array
                total:
                    format: int64
                    type: integer
            type: object
        geo.v1.ListPOIsResponse:
            example:
                pois: null
                total: 0
            properties:
                pois:
                    items:
                        $ref: '#/components/schemas/geo.v1.POI'
                    type: array
                total:
                    format: int64
                    type: integer
            type: object
        geo.v1.ListStatesResponse:
            example:
                states: null
                total: 0
            properties:
                states:
                    items:
                        $ref: '#/components/schemas/geo.v1.State'
                    type: array
                total:
                    format: int64
                    type: integer
            type: object
        geo.v1.POI:
            example:
                city: null
                cityId: 0
                description: ""
                descriptionCn: ""
                descriptionEn: ""
                duration: 0
                id: ""
                imageUrl: ""
                latitude: 0
                longitude: 0
                name: ""
                nameCn: ""
                nameEn: ""
                nameLocal: ""
                popularity: 0
                rating: 0
                reviewsCount: 0
            properties:
                city:
                    $ref: '#/components/schemas/geo.v1.City'
                cityId:
                    format: int32
                    type: integer
                description:
                    type: string
                descriptionCn:
                    type: string
                descriptionEn:
                    type: string
                duration:
                    format: int64
                    type: integer
                id:
                    type: string
                imageUrl:
                    type: string
                latitude:
                    format: double
                    type: number
                longitude:
                    format: double
                    type: number
                name:
                    type: string
                nameCn:
                    type: string
                nameEn:
                    type: string
                nameLocal:
                    type: string
                popularity:
                    format: double
                    type: number
                rating:
                    format: double
                    type: number
                reviewsCount:
                    format: int32
                    type: integer
            type: object
        geo.v1.State:
            example:
                code: ""
                country: null
                countryId: 0
                id: 0
                name: ""
                nameCn: ""
                nameEn: ""
                nameLocal: ""
            properties:
                code:
                    type: string
                country:
                    $ref: '#/components/schemas/geo.v1.Country'
                countryId:
                    format: int32
                    type: integer
                id:
                    format: int32
                    type: integer
                name:
                    type: string
                nameCn:
                    type: string
                nameEn:
                    type: string
                nameLocal:
                    type: string
            type: object
        poi.v1.PointOfInterest:
            example:
                address: ""
                category: ""
                city: ""
                country: ""
                description: ""
                id: ""
                latitude: 0
                longitude: 0
                name: ""
                nameCn: ""
                nameEn: ""
                nameLocal: ""
                rating: 0
                recommendedDurationMinutes: 0
                state: ""
                type: ""
            properties:
                address:
                    type: string
                category:
                    type: string
                city:
                    type: string
                country:
                    type: string
                description:
                    type: string
                id:
                    type: string
                latitude:
                    format: double
                    type: number
                longitude:
                    format: double
                    type: number
                name:
                    type: string
                nameCn:
                    type: string
                nameEn:
                    type: string
                nameLocal:
                    type: string
                rating:
                    format: float
                    type: number
                recommendedDurationMinutes:
                    format: int64
                    type: integer
                state:
                    type: string
                type:
                    type: string
            type: object
        poi.v1.SearchPointsOfInterestResponse:
            example:
                pointsOfInterest: null
            properties:
                pointsOfInterest:
                    items:
                        $ref: '#/components/schemas/poi.v1.PointOfInterest'
                    type: array
            type: object
        storage.v1.CompleteUploadReply:
            example:
                bucket: ""
                etag: ""
                expiration: 0
                fileId: 0
                key: ""
                location: ""
                privateUrl: ""
                publicUrl: ""
            properties:
                bucket:
                    type: string
                etag:
                    type: string
                expiration:
                    format: int64
                    type: integer
                fileId:
                    format: int64
                    type: integer
                key:
                    type: string
                location:
                    type: string
                privateUrl:
                    type: string
                publicUrl:
                    type: string
            type: object
        storage.v1.CompleteUploadRequest:
            example:
                fileSize: 0
                objectKey: ""
                parts: null
                uploadId: ""
            properties:
                fileSize:
                    format: int64
                    type: integer
                objectKey:
                    type: string
                parts:
                    items:
                        $ref: '#/components/schemas/storage.v1.CompleteUploadRequest_UploadPart'
                    type: array
                uploadId:
                    type: string
            type: object
        storage.v1.CompleteUploadRequest_UploadPart:
            example:
                etag: ""
                partNumber: 0
            properties:
                etag:
                    type: string
                partNumber:
                    format: int32
                    type: integer
            type: object
        storage.v1.GenerateUploadPartURLReply:
            example:
                bucketName: ""
                expirationTime: 0
                objectKey: ""
                partNumber: 0
                uploadId: ""
                uploadUrl: ""
            properties:
                bucketName:
                    type: string
                expirationTime:
                    format: int64
                    type: integer
                objectKey:
                    type: string
                partNumber:
                    format: int32
                    type: integer
                uploadId:
                    type: string
                uploadUrl:
                    type: string
            type: object
        storage.v1.InitUploadReply:
            example:
                bucketName: ""
                objectKey: ""
                uploadId: ""
            properties:
                bucketName:
                    type: string
                objectKey:
                    type: string
                uploadId:
                    type: string
            type: object
        trip.v1.AddDayRequest:
            example:
                afterDay: 0
                notes: ""
                tripId: ""
            properties:
                afterDay:
                    format: int32
                    type: integer
                notes:
                    type: string
                tripId:
                    type: string
            type: object
        trip.v1.AddDayResponse:
            example:
                dailyTrip: null
            properties:
                dailyTrip:
                    $ref: '#/components/schemas/trip.v1.DailyTrip'
            type: object
        trip.v1.AddTripCollaboratorsRequest:
            example:
                tripId: ""
                userIds: ""
            properties:
                tripId:
                    type: string
                userIds:
                    items:
                        type: string
                    type: array
            type: object
        trip.v1.AddTripCollaboratorsResponse:
            example:
                collaborators: null
            properties:
                collaborators:
                    items:
                        $ref: '#/components/schemas/trip.v1.TripCollaborator'
                    type: array
            type: object
        trip.v1.CreateDailyTripRequest:
            example:
                date: 1741589979
                day: 0
                notes: ""
                tripId: ""
            properties:
                date:
                    format: int32
                    type: integer
                day:
                    format: int32
                    type: integer
                notes:
                    type: string
                tripId:
                    type: string
            type: object
        trip.v1.CreateDailyTripResponse:
            example:
                dailyTrip: null
            properties:
                dailyTrip:
                    $ref: '#/components/schemas/trip.v1.DailyTrip'
            type: object
        trip.v1.CreateTripFromCardRequest:
            example:
                cityIds: 0
                duration: 0
                endTs: 1741589979
                poiIds: ""
                startTs: 1741589979
            properties:
                cityIds:
                    items:
                        format: int32
                        type: integer
                    type: array
                duration:
                    format: int32
                    type: integer
                endTs:
                    format: int32
                    type: integer
                poiIds:
                    items:
                        type: string
                    type: array
                startTs:
                    format: int32
                    type: integer
            type: object
        trip.v1.CreateTripFromExternalLinkRequest:
            example:
                duration: 0
                endTs: 1741589979
                linkUrl: ""
                startTs: 1741589979
            properties:
                duration:
                    format: int32
                    type: integer
                endTs:
                    format: int32
                    type: integer
                linkUrl:
                    type: string
                startTs:
                    format: int32
                    type: integer
            type: object
        trip.v1.CreateTripManuallyRequest:
            example:
                destination: ""
                duration: 0
                endTs: 1741589979
                startTs: 1741589979
            properties:
                destination:
                    type: string
                duration:
                    format: int32
                    type: integer
                endTs:
                    format: int32
                    type: integer
                startTs:
                    format: int32
                    type: integer
            type: object
        trip.v1.CreateTripPOIPoolRequest:
            example:
                notes: ""
                poiId: ""
                tripId: ""
            properties:
                notes:
                    type: string
                poiId:
                    type: string
                tripId:
                    type: string
            type: object
        trip.v1.CreateTripPOIPoolResponse:
            example:
                poiPool: null
            properties:
                poiPool:
                    $ref: '#/components/schemas/trip.v1.TripPOIPool'
            type: object
        trip.v1.CreateTripResponse:
            example:
                trip: null
            properties:
                trip:
                    $ref: '#/components/schemas/trip.v1.Trip'
            type: object
        trip.v1.DailyItinerary:
            example:
                createdAt: 1741589979
                dailyTripId: ""
                id: ""
                notes: ""
                order: 0
                poi: null
                poiId: ""
                tripId: ""
                updatedAt: 1741589979
            properties:
                createdAt:
                    format: int32
                    type: integer
                dailyTripId:
                    type: string
                id:
                    type: string
                notes:
                    type: string
                order:
                    format: int32
                    type: integer
                poi:
                    $ref: '#/components/schemas/poi.v1.PointOfInterest'
                poiId:
                    type: string
                tripId:
                    type: string
                updatedAt:
                    format: int32
                    type: integer
            type: object
        trip.v1.DailyTrip:
            example:
                createdAt: 1741589979
                dailyItineraries: null
                date: 1741589979
                day: 0
                id: ""
                notes: ""
                tripId: ""
                updatedAt: 1741589979
            properties:
                createdAt:
                    format: int32
                    type: integer
                dailyItineraries:
                    items:
                        $ref: '#/components/schemas/trip.v1.DailyItinerary'
                    type: array
                date:
                    format: int32
                    type: integer
                day:
                    format: int32
                    type: integer
                id:
                    type: string
                notes:
                    type: string
                tripId:
                    type: string
                updatedAt:
                    format: int32
                    type: integer
            type: object
        trip.v1.DeleteDailyTripResponse:
            example:
                status: ""
            properties:
                status:
                    type: string
            type: object
        trip.v1.DeleteTripPOIPoolResponse:
            example:
                status: ""
            properties:
                status:
                    type: string
            type: object
        trip.v1.DeleteTripResponse:
            example:
                status: ""
            properties:
                status:
                    type: string
            type: object
        trip.v1.GetDailyTripResponse:
            example:
                dailyTrip: null
            properties:
                dailyTrip:
                    $ref: '#/components/schemas/trip.v1.DailyTrip'
            type: object
        trip.v1.GetTripResponse:
            example:
                trip: null
            properties:
                trip:
                    $ref: '#/components/schemas/trip.v1.Trip'
            type: object
        trip.v1.ListDailyTripsResponse:
            example:
                dailyTrips: null
            properties:
                dailyTrips:
                    items:
                        $ref: '#/components/schemas/trip.v1.DailyTrip'
                    type: array
            type: object
        trip.v1.ListTripCollaboratorsResponse:
            example:
                collaborators: null
            properties:
                collaborators:
                    items:
                        $ref: '#/components/schemas/trip.v1.TripCollaborator'
                    type: array
            type: object
        trip.v1.ListTripPOIPoolResponse:
            example:
                poiPool: null
            properties:
                poiPool:
                    items:
                        $ref: '#/components/schemas/trip.v1.TripPOIPool'
                    type: array
            type: object
        trip.v1.ListTripsResponse:
            example:
                trips: null
            properties:
                trips:
                    items:
                        $ref: '#/components/schemas/trip.v1.Trip'
                    type: array
            type: object
        trip.v1.MoveItineraryItemRequest:
            example:
                afterOrder: 0
                dailyItineraryId: ""
                dailyTripId: ""
                day: 0
                tripId: ""
            properties:
                afterOrder:
                    format: int32
                    type: integer
                dailyItineraryId:
                    type: string
                dailyTripId:
                    type: string
                day:
                    format: int32
                    type: integer
                tripId:
                    type: string
            type: object
        trip.v1.MoveItineraryItemResponse:
            example:
                trip: null
            properties:
                trip:
                    $ref: '#/components/schemas/trip.v1.Trip'
            type: object
        trip.v1.RemoveTripCollaboratorResponse:
            example:
                status: ""
            properties:
                status:
                    type: string
            type: object
        trip.v1.Trip:
            example:
                createdAt: 1741589979
                dailyTrips: null
                days: 0
                description: ""
                endTs: 1741589979
                id: ""
                poiPool: null
                startTs: 1741589979
                status: true
                title: ""
                updatedAt: 1741589979
            properties:
                createdAt:
                    format: int32
                    type: integer
                dailyTrips:
                    items:
                        $ref: '#/components/schemas/trip.v1.DailyTrip'
                    type: array
                days:
                    format: int32
                    type: integer
                description:
                    type: string
                endTs:
                    format: int32
                    type: integer
                id:
                    type: string
                poiPool:
                    items:
                        $ref: '#/components/schemas/poi.v1.PointOfInterest'
                    type: array
                startTs:
                    format: int32
                    type: integer
                status:
                    type: boolean
                title:
                    type: string
                updatedAt:
                    format: int32
                    type: integer
            type: object
        trip.v1.TripCollaborator:
            example:
                avatarUrl: ""
                id: ""
                nickname: ""
                status: Invited
                username: ""
            properties:
                avatarUrl:
                    type: string
                id:
                    type: string
                nickname:
                    type: string
                status:
                    enum:
                        - Invited
                        - Accepted
                        - Rejected
                    format: enum
                    type: string
                username:
                    type: string
            type: object
        trip.v1.TripPOIPool:
            example:
                createdAt: 1741589979
                id: ""
                notes: ""
                poi: null
                poiId: ""
                tripId: ""
                updatedAt: 1741589979
            properties:
                createdAt:
                    format: int32
                    type: integer
                id:
                    type: string
                notes:
                    type: string
                poi:
                    $ref: '#/components/schemas/poi.v1.PointOfInterest'
                poiId:
                    type: string
                tripId:
                    type: string
                updatedAt:
                    format: int32
                    type: integer
            type: object
        trip.v1.UpdateCollaboratorStatusRequest:
            example:
                status: Invited
                tripId: ""
                userId: ""
            properties:
                status:
                    enum:
                        - Invited
                        - Accepted
                        - Rejected
                    format: enum
                    type: string
                tripId:
                    type: string
                userId:
                    type: string
            type: object
        trip.v1.UpdateCollaboratorStatusResponse:
            example:
                collaborator: null
            properties:
                collaborator:
                    $ref: '#/components/schemas/trip.v1.TripCollaborator'
            type: object
        trip.v1.UpdateDailyTripRequest:
            example:
                dailyId: ""
                date: 1741589979
                day: 0
                notes: ""
                tripId: ""
            properties:
                dailyId:
                    type: string
                date:
                    format: int32
                    type: integer
                day:
                    format: int32
                    type: integer
                notes:
                    type: string
                tripId:
                    type: string
            type: object
        trip.v1.UpdateDailyTripResponse:
            example:
                dailyTrip: null
            properties:
                dailyTrip:
                    $ref: '#/components/schemas/trip.v1.DailyTrip'
            type: object
        trip.v1.UpdateTripRequest:
            example:
                description: ""
                duration: 0
                endTs: 1741589979
                id: ""
                startTs: 1741589979
                title: ""
            properties:
                description:
                    type: string
                duration:
                    format: int32
                    type: integer
                endTs:
                    format: int32
                    type: integer
                id:
                    type: string
                startTs:
                    format: int32
                    type: integer
                title:
                    type: string
            type: object
        trip.v1.UpdateTripResponse:
            example:
                trip: null
            properties:
                trip:
                    $ref: '#/components/schemas/trip.v1.Trip'
            type: object
        user.v1.GetSupportedLanguagesResponse:
            example:
                languages: null
            properties:
                languages:
                    items:
                        $ref: '#/components/schemas/user.v1.Language'
                    type: array
            type: object
        user.v1.GetUserInfoResponse:
            example:
                avatarUrl: ""
                createdAt: 0
                email: ""
                id: ""
                nickname: ""
                phoneNumber: ""
                updatedAt: 0
                username: ""
            properties:
                avatarUrl:
                    type: string
                createdAt:
                    format: int64
                    type: integer
                email:
                    type: string
                id:
                    type: string
                nickname:
                    type: string
                phoneNumber:
                    type: string
                updatedAt:
                    format: int64
                    type: integer
                username:
                    type: string
            type: object
        user.v1.GetUserPreferencesResponse:
            example:
                preference: null
            properties:
                preference:
                    $ref: '#/components/schemas/user.v1.UserPreference'
            type: object
        user.v1.Language:
            example:
                code: ""
                name: ""
                nativeName: ""
            properties:
                code:
                    type: string
                name:
                    type: string
                nativeName:
                    type: string
            type: object
        user.v1.UpdateUserInfoRequest:
            example:
                avatarUrl: ""
                nickname: ""
                username: ""
            properties:
                avatarUrl:
                    type: string
                nickname:
                    type: string
                username:
                    type: string
            type: object
        user.v1.UpdateUserInfoResponse:
            properties: {}
            type: object
        user.v1.UpdateUserPreferencesRequest:
            example:
                preference: null
            properties:
                preference:
                    $ref: '#/components/schemas/user.v1.UserPreference'
            type: object
        user.v1.UpdateUserPreferencesResponse:
            properties: {}
            type: object
        user.v1.UserPreference:
            example:
                appLanguage: ""
                communityNotification: true
                contentPush: true
                darkMode: System
                defaultCity: ""
                distanceUnit: Kilometer
                timeFormat: H24
                tripReminder: true
            properties:
                appLanguage:
                    type: string
                communityNotification:
                    type: boolean
                contentPush:
                    type: boolean
                darkMode:
                    enum:
                        - System
                        - "Off"
                        - "On"
                    format: enum
                    type: string
                defaultCity:
                    type: string
                distanceUnit:
                    enum:
                        - Kilometer
                        - Mile
                    format: enum
                    type: string
                timeFormat:
                    enum:
                        - H24
                        - H12
                    format: enum
                    type: string
                tripReminder:
                    type: boolean
            type: object
    securitySchemes:
        BearerAuth:
            bearerFormat: JWT
            scheme: bearer
            type: http
info:
    description: API generated from protobufs
    title: Generated API
    version: 1.0.0
openapi: 3.0.0
paths:
    /api/storage/v1/complete-upload:
        post:
            operationId: Storage_CompleteUpload
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/storage.v1.CompleteUploadRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/storage.v1.CompleteUploadReply'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            tags:
                - Storage
    /api/storage/v1/generate-upload-part-url:
        get:
            operationId: Storage_GenerateUploadPartURL
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/storage.v1.GenerateUploadPartURLReply'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            tags:
                - Storage
    /api/storage/v1/init-upload:
        get:
            operationId: Storage_InitUpload
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/storage.v1.InitUploadReply'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            tags:
                - Storage
    /api/v1/auth/one-click-login:
        post:
            operationId: AuthService_OneClickLogin
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/auth.v1.OneClickLoginRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/auth.v1.OneClickLoginResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            security: []
            tags:
                - AuthService
    /api/v1/auth/refresh-token:
        post:
            operationId: AuthService_RefreshToken
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/auth.v1.RefreshTokenRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/auth.v1.RefreshTokenResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            security: []
            tags:
                - AuthService
    /api/v1/auth/request-password-reset:
        post:
            operationId: AuthService_RequestPasswordReset
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/auth.v1.RequestPasswordResetRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/auth.v1.RequestPasswordResetResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            security: []
            tags:
                - AuthService
    /api/v1/auth/reset-password:
        post:
            operationId: AuthService_ResetPassword
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/auth.v1.ResetPasswordRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/auth.v1.ResetPasswordResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            security: []
            tags:
                - AuthService
    /api/v1/auth/send-sms-code:
        post:
            operationId: AuthService_SendSmsCode
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/auth.v1.SendSmsCodeRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/auth.v1.SendSmsCodeResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            security: []
            tags:
                - AuthService
    /api/v1/auth/sign-in/oauth:
        post:
            operationId: AuthService_SignInWithOAuth
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/auth.v1.SignInWithOAuthRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/auth.v1.SignInWithOAuthResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            security: []
            tags:
                - AuthService
    /api/v1/auth/sign-in/password:
        post:
            operationId: AuthService_SignIn
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/auth.v1.SignInRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/auth.v1.SignInResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            security: []
            tags:
                - AuthService
    /api/v1/auth/sign-up:
        post:
            operationId: AuthService_SignUp
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/auth.v1.SignUpRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/auth.v1.SignUpResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            security: []
            tags:
                - AuthService
    /api/v1/auth/verify-password-reset-token:
        get:
            operationId: AuthService_VerifyPasswordResetToken
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/auth.v1.VerifyPasswordResetTokenResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            security: []
            tags:
                - AuthService
    /api/v1/auth/verify-sms-code:
        post:
            operationId: AuthService_VerifySmsCode
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/auth.v1.VerifySmsCodeRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/auth.v1.VerifySmsCodeResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            security: []
            tags:
                - AuthService
    /api/v1/geo/cities:
        get:
            operationId: GeoService_ListCities
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/geo.v1.ListCitiesResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            tags:
                - GeoService
    /api/v1/geo/continents:
        get:
            operationId: GeoService_ListContinents
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/geo.v1.ListContinentsResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            tags:
                - GeoService
    /api/v1/geo/countries:
        get:
            operationId: GeoService_ListCountries
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/geo.v1.ListCountriesResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            tags:
                - GeoService
    /api/v1/geo/pois:
        get:
            operationId: GeoService_ListPOIs
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/geo.v1.ListPOIsResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            tags:
                - GeoService
    /api/v1/geo/states:
        get:
            operationId: GeoService_ListStates
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/geo.v1.ListStatesResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            tags:
                - GeoService
    /api/v1/poi/search:
        get:
            operationId: PointsOfInterestService_SearchPointsOfInterest
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/poi.v1.SearchPointsOfInterestResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            tags:
                - PointsOfInterestService
    /api/v1/trips:
        get:
            operationId: TripService_ListTrips
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/trip.v1.ListTripsResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            tags:
                - TripService
    /api/v1/trips/{id}:
        delete:
            operationId: TripService_DeleteTrip
            parameters:
                - example: ""
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/trip.v1.DeleteTripResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            tags:
                - TripService
        get:
            operationId: TripService_GetTrip
            parameters:
                - example: ""
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/trip.v1.GetTripResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            tags:
                - TripService
        put:
            operationId: TripService_UpdateTrip
            parameters:
                - example: ""
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/trip.v1.UpdateTripRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/trip.v1.UpdateTripResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            tags:
                - TripService
    /api/v1/trips/{trip_id}/collaborators:
        get:
            operationId: TripService_ListTripCollaborators
            parameters:
                - example: ""
                  in: path
                  name: tripId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/trip.v1.ListTripCollaboratorsResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            tags:
                - TripService
        post:
            operationId: TripService_AddTripCollaborators
            parameters:
                - example: ""
                  in: path
                  name: tripId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/trip.v1.AddTripCollaboratorsRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/trip.v1.AddTripCollaboratorsResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            tags:
                - TripService
    /api/v1/trips/{trip_id}/collaborators/{user_id}:
        delete:
            operationId: TripService_RemoveTripCollaborator
            parameters:
                - example: ""
                  in: path
                  name: tripId
                  required: true
                  schema:
                    type: string
                - example: ""
                  in: path
                  name: userId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/trip.v1.RemoveTripCollaboratorResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            tags:
                - TripService
    /api/v1/trips/{trip_id}/collaborators/{user_id}/status:
        put:
            operationId: TripService_UpdateCollaboratorStatus
            parameters:
                - example: ""
                  in: path
                  name: tripId
                  required: true
                  schema:
                    type: string
                - example: ""
                  in: path
                  name: userId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/trip.v1.UpdateCollaboratorStatusRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/trip.v1.UpdateCollaboratorStatusResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            tags:
                - TripService
    /api/v1/trips/{trip_id}/daily:
        get:
            operationId: TripService_ListDailyTrips
            parameters:
                - example: ""
                  in: path
                  name: tripId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/trip.v1.ListDailyTripsResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            tags:
                - TripService
        post:
            operationId: TripService_CreateDailyTrip
            parameters:
                - example: ""
                  in: path
                  name: tripId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/trip.v1.CreateDailyTripRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/trip.v1.CreateDailyTripResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            tags:
                - TripService
    /api/v1/trips/{trip_id}/daily/{daily_id}:
        delete:
            operationId: TripService_DeleteDailyTrip
            parameters:
                - example: ""
                  in: path
                  name: tripId
                  required: true
                  schema:
                    type: string
                - example: ""
                  in: path
                  name: dailyId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/trip.v1.DeleteDailyTripResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            tags:
                - TripService
        get:
            operationId: TripService_GetDailyTrip
            parameters:
                - example: ""
                  in: path
                  name: tripId
                  required: true
                  schema:
                    type: string
                - example: ""
                  in: path
                  name: dailyId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/trip.v1.GetDailyTripResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            tags:
                - TripService
        put:
            operationId: TripService_UpdateDailyTrip
            parameters:
                - example: ""
                  in: path
                  name: tripId
                  required: true
                  schema:
                    type: string
                - example: ""
                  in: path
                  name: dailyId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/trip.v1.UpdateDailyTripRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/trip.v1.UpdateDailyTripResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            tags:
                - TripService
    /api/v1/trips/{trip_id}/day:
        post:
            operationId: TripService_AddDay
            parameters:
                - example: ""
                  in: path
                  name: tripId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/trip.v1.AddDayRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/trip.v1.AddDayResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            tags:
                - TripService
    /api/v1/trips/{trip_id}/itineraries/move:
        post:
            operationId: TripService_MoveItineraryItem
            parameters:
                - example: ""
                  in: path
                  name: tripId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/trip.v1.MoveItineraryItemRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/trip.v1.MoveItineraryItemResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            tags:
                - TripService
    /api/v1/trips/{trip_id}/poi-pool:
        get:
            operationId: TripService_ListTripPOIPool
            parameters:
                - example: ""
                  in: path
                  name: tripId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/trip.v1.ListTripPOIPoolResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            tags:
                - TripService
        post:
            operationId: TripService_CreateTripPOIPool
            parameters:
                - example: ""
                  in: path
                  name: tripId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/trip.v1.CreateTripPOIPoolRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/trip.v1.CreateTripPOIPoolResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            tags:
                - TripService
    /api/v1/trips/{trip_id}/poi-pool/{poi_pool_id}:
        delete:
            operationId: TripService_DeleteTripPOIPool
            parameters:
                - example: ""
                  in: path
                  name: tripId
                  required: true
                  schema:
                    type: string
                - example: ""
                  in: path
                  name: poiPoolId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/trip.v1.DeleteTripPOIPoolResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            tags:
                - TripService
    /api/v1/trips/card:
        post:
            operationId: TripService_CreateTripFromCard
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/trip.v1.CreateTripFromCardRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/trip.v1.CreateTripResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            tags:
                - TripService
    /api/v1/trips/external-link:
        post:
            operationId: TripService_CreateTripFromExternalLink
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/trip.v1.CreateTripFromExternalLinkRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/trip.v1.CreateTripResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            tags:
                - TripService
    /api/v1/trips/manual:
        post:
            operationId: TripService_CreateTripManually
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/trip.v1.CreateTripManuallyRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/trip.v1.CreateTripResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            tags:
                - TripService
    /api/v1/user/info:
        get:
            operationId: UserService_GetUserInfo
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.GetUserInfoResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            tags:
                - UserService
        put:
            operationId: UserService_UpdateUserInfo
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user.v1.UpdateUserInfoRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.UpdateUserInfoResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            tags:
                - UserService
    /api/v1/user/preferences:
        get:
            operationId: UserService_GetUserPreferences
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.GetUserPreferencesResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            tags:
                - UserService
        put:
            operationId: UserService_UpdateUserPreferences
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user.v1.UpdateUserPreferencesRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.UpdateUserPreferencesResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            tags:
                - UserService
    /api/v1/user/supported-languages:
        get:
            operationId: UserService_GetSupportedLanguages
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.GetSupportedLanguagesResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                    description: Internal Server Error
            tags:
                - UserService
security:
    - BearerAuth: []
servers:
    - description: Local Server
      url: http://localhost:8000
tags:
    - description: ""
      name: AuthService
    - description: ""
      name: GeoService
    - description: ""
      name: PointsOfInterestService
    - description: ""
      name: Storage
    - description: ""
      name: TripService
    - description: ""
      name: UserService
